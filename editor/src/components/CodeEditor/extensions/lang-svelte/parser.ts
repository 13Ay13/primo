import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';
import { styleTags, tags } from '@lezer/highlight';
import { parseMixed } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const scriptText = 57,
  StartCloseScriptTag = 1,
  styleText = 58,
  StartCloseStyleTag = 2,
  textareaText = 59,
  StartCloseTextareaTag = 3,
  StartTag = 4,
  StartScriptTag = 5,
  StartStyleTag = 6,
  StartTextareaTag = 7,
  StartSelfClosingTag = 8,
  StartCloseTag = 9,
  NoMatchStartCloseTag = 10,
  MismatchedStartCloseTag = 11,
  missingCloseTag = 60,
  IncompleteCloseTag = 12,
  commentContent$1 = 61,
  Element = 20,
  ScriptText = 29,
  StyleText = 32,
  TextareaText = 35,
  OpenTag = 37,
  Dialect_noMatch = 0;

/* Hand-written tokenizers for HTML. */

const selfClosers = {
  area: true, base: true, br: true, col: true, command: true,
  embed: true, frame: true, hr: true, img: true, input: true,
  keygen: true, link: true, meta: true, param: true, source: true,
  track: true, wbr: true, menuitem: true,
  textarea: true,
  // SVG
  rect: true,
  path: true,
  circle: true,
  polyline: true,
  ellipse: true,
  polygon: true,
  line: true
};

const implicitlyClosed = {
  dd: true, li: true, optgroup: true, option: true, p: true,
  rp: true, rt: true, tbody: true, td: true, tfoot: true,
  th: true, tr: true
};

const closeOnOpen = {
  dd: { dd: true, dt: true },
  dt: { dd: true, dt: true },
  li: { li: true },
  option: { option: true, optgroup: true },
  optgroup: { optgroup: true },
  p: {
    address: true, article: true, aside: true, blockquote: true, dir: true,
    div: true, dl: true, fieldset: true, footer: true, form: true,
    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,
    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,
    p: true, pre: true, section: true, table: true, ul: true, each: true
  },
  rp: { rp: true, rt: true },
  rt: { rp: true, rt: true },
  tbody: { tbody: true, tfoot: true },
  td: { td: true, th: true },
  tfoot: { tbody: true },
  th: { td: true, th: true },
  thead: { tbody: true, tfoot: true },
  tr: { tr: true }
};

function nameChar(ch) {
  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161
}

function isSpace(ch) {
  return ch == 9 || ch == 10 || ch == 13 || ch == 32
}

let cachedName = null, cachedInput = null, cachedPos = 0;
function tagNameAfter(input, offset) {
  let pos = input.pos + offset;
  if (cachedPos == pos && cachedInput == input) return cachedName
  let next = input.peek(offset);
  while (isSpace(next)) next = input.peek(++offset);
  let name = "";
  for (; ;) {
    if (!nameChar(next)) break
    name += String.fromCharCode(next);
    next = input.peek(++offset);
  }
  // Undefined to signal there's a <? or <!, null for just missing
  cachedInput = input; cachedPos = pos;
  return cachedName = name ? name : next == question || next == bang ? undefined : null
  // return cachedName = name ? name.toLowerCase() : next == question || next == bang ? undefined : null
}

const lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33, dash = 45;

function ElementContext(name, parent) {
  this.name = name;
  this.parent = parent;
  this.hash = parent ? parent.hash : 0;
  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);
}

const startTagTerms = [StartTag, StartSelfClosingTag, StartScriptTag, StartStyleTag, StartTextareaTag];

const elementContext = new ContextTracker({
  start: null,
  shift(context, term, stack, input) {
    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || "", context) : context
  },
  reduce(context, term) {
    return term == Element && context ? context.parent : context
  },
  reuse(context, node, stack, input) {
    let type = node.type.id;
    return type == StartTag || type == OpenTag
      ? new ElementContext(tagNameAfter(input, 1) || "", context) : context
  },
  hash(context) { return context ? context.hash : 0 },
  strict: false
});

const tagStart = new ExternalTokenizer((input, stack) => {
  if (input.next != lessThan) {
    // End of file, close any open tags
    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);
    return
  }
  input.advance();
  let close = input.next == slash;
  if (close) input.advance();
  let name = tagNameAfter(input, 0);
  if (name === undefined) return
  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)

  let parent = stack.context ? stack.context.name : null;
  if (close) {
    if (name == parent) return input.acceptToken(StartCloseTag)
    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)
    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)
    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return
    input.acceptToken(MismatchedStartCloseTag);
  } else {
    if (name == "script") return input.acceptToken(StartScriptTag)
    if (name == "style") return input.acceptToken(StartStyleTag)
    if (name == "textarea") return input.acceptToken(StartTextareaTag)

    const isUpperCase = name.charAt(0) === (name.charAt(0)).toUpperCase();
    if (selfClosers.hasOwnProperty(name) || isUpperCase) return input.acceptToken(StartSelfClosingTag)
    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);
    else input.acceptToken(StartTag);
  }
}, { contextual: true });

const commentContent = new ExternalTokenizer(input => {
  for (let dashes = 0, i = 0; ; i++) {
    if (input.next < 0) {
      if (i) input.acceptToken(commentContent$1);
      break
    }
    if (input.next == dash) {
      dashes++;
    } else if (input.next == greaterThan && dashes >= 2) {
      if (i > 3) input.acceptToken(commentContent$1, -2);
      break
    } else {
      dashes = 0;
    }
    input.advance();
  }
});

function contentTokenizer(tag, textToken, endToken) {
  let lastState = 2 + tag.length;
  return new ExternalTokenizer(input => {
    // state means:
    // - 0 nothing matched
    // - 1 '<' matched
    // - 2 '</' + possibly whitespace matched
    // - 3-(1+tag.length) part of the tag matched
    // - lastState whole tag + possibly whitespace matched
    for (let state = 0, matchedLen = 0, i = 0; ; i++) {
      if (input.next < 0) {
        if (i) input.acceptToken(textToken);
        break
      }
      if (state == 0 && input.next == lessThan ||
        state == 1 && input.next == slash ||
        state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {
        state++;
        matchedLen++;
      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {
        matchedLen++;
      } else if (state == lastState && input.next == greaterThan) {
        if (i > matchedLen)
          input.acceptToken(textToken, -matchedLen);
        else
          input.acceptToken(endToken, -(matchedLen - 2));
        break
      } else if ((input.next == 10 /* '\n' */ || input.next == 13 /* '\r' */) && i) {
        input.acceptToken(textToken, 1);
        break
      } else {
        state = matchedLen = 0;
      }
      input.advance();
    }
  })
}

const scriptTokens = contentTokenizer("script", scriptText, StartCloseScriptTag);

const styleTokens = contentTokenizer("style", styleText, StartCloseStyleTag);

const textareaTokens = contentTokenizer("textarea", textareaText, StartCloseTextareaTag);

const htmlHighlighting = styleTags({
  "Text RawText": tags.content,
  "StartTag StartCloseTag SelfCloserEndTag EndTag SelfCloseEndTag": tags.angleBracket,
  "TagName": tags.tagName,
  "MismatchedCloseTag/TagName": [tags.tagName, tags.invalid],
  "AttributeName": tags.attributeName,
  "AttributeValue EventDirective SvelteOpenTag SvelteCloseTag": tags.attributeValue,
  Is: tags.definitionOperator,
  "EntityReference CharacterReference": tags.character,
  Comment: tags.blockComment,
  "ProcessingInst": tags.processingInstruction,
  DoctypeDecl: tags.documentMeta,
  "SvelteBrackets EventDirectiveEvent UnquotedAttributeValue": tags.keyword
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: ",xOVOxOOO!gQ!bO'#CqO!lQ!bO'#C{O!qQ!bO'#DOO!vQ!bO'#DRO!{Q!bO'#DTO#QOXO'#CpO#]OYO'#CpO#hO[O'#CpO%TOxO'#CpOOOW'#Cp'#CpO%[O!rO'#DUO%dQ!bO'#DYO%iQ!bO'#DZOOOW'#Dn'#DnOOOW'#D]'#D]QVOxOOO%nQ#tO,59]O%yQ#tO,59gO&UQ#tO,59jO&aQ#tO,59mO&lQ#tO,59oOOOX'#Da'#DaO&wOXO'#CyO'SOXO,59[OOOY'#Db'#DbO'[OYO'#C|O'gOYO,59[OOO['#Dc'#DcO'oO[O'#DPO'zO[O,59[OOOW'#Dd'#DdO(SOxO,59[O(ZQ!bO'#DSOOOW,59[,59[OOO`'#De'#DeO(`O!rO,59pOOOW,59p,59pO(hQ!bO,59tO(mQ!bO,59uOOOW-E7Z-E7ZO(rQ#tO'#CsOOQO'#D^'#D^O)QQ#tO1G.wOOOX1G.w1G.wO)]Q#tO1G/ROOOY1G/R1G/RO)hQ#tO1G/UOOO[1G/U1G/UO)sQ#tO1G/XOOOW1G/X1G/XO*OQ#tO1G/ZOOOW1G/Z1G/ZOOOX-E7_-E7_O*ZQ!bO'#CzOOOW1G.v1G.vOOOY-E7`-E7`O*`Q!bO'#C}OOO[-E7a-E7aO*eQ!bO'#DQOOOW-E7b-E7bO*jQ!bO,59nOOO`-E7c-E7cOOOW1G/[1G/[OOOW1G/`1G/`OOOW1G/a1G/aO*oQ!bO,59_OOQO-E7[-E7[OOOX7+$c7+$cOOOY7+$m7+$mOOO[7+$p7+$pOOOW7+$s7+$sOOOW7+$u7+$uO*zQ!bO,59fO+PQ!bO,59iO+UQ!bO,59lOOOW1G/Y1G/YO+ZO&jO'#CvO+iO,UO'#CvOOQO1G.y1G.yOOOW1G/Q1G/QOOOW1G/T1G/TOOOW1G/W1G/WOOOO'#D_'#D_O+wO&jO,59bOOQO,59b,59bOOOO'#D`'#D`O,VO,UO,59bOOOO-E7]-E7]OOQO1G.|1G.|OOOO-E7^-E7^",
  stateData: ",t~O!aOS~OSSOTPOUQOVROWTOY]OZ[O[^O^^O_^O`^Oa^Ob^Oc^Ok^Oy^Oz^O{^O!O_O!gZO~OfaO~OfbO~OfcO~OfdO~OfeO~O!ZfOPmP!^mP~O![iOQpP!^pP~O!]lORsP!^sP~OSSOTPOUQOVROWTOXqOY]OZ[O[^O^^O_^O`^Oa^Ob^Oc^Ok^Oy^Oz^O{^O!gZO~O!^rO~P#sO!_sO!huO~OfvO~OfwO~O_yOhyOl|O~O_yOhyOl!OO~O_yOhyOl!QO~O_yOhyOl!SO~O_yOhyOl!UO~O!ZfOPmX!^mX~OP!WO!^!XO~O![iOQpX!^pX~OQ!ZO!^!XO~O!]lORsX!^sX~OR!]O!^!XO~O!^!XO~P#sOf!_O~O!_sO!h!aO~Ol!bO~Ol!cO~Oi!dO_gXhgXlgX~O_yOhyOl!fO~O_yOhyOl!gO~O_yOhyOl!hO~O_yOhyOl!iO~O_yOhyOl!jO~Of!kO~Of!lO~Of!mO~Ol!nO~Ok!qO!c!oO!e!pO~Ol!rO~Ol!sO~Ol!tO~Oa!uOb!uO!c!wO!d!uO~Oa!xOb!xO!e!wO!f!xO~Oa!uOb!uO!c!{O!d!uO~Oa!xOb!xO!e!{O!f!xO~O!gy!O_^kz{h`h!e!c!e~",
  goto: "%s!cPPPPPPPPPPPPPPPPPPPP!d!jP!pPP!|PP#P#S#V#]#`#c#i#l#o#u#{!dPPP!d!dP$R$X$o$u${%R%X%_%ePPPPPPPP%kX^OX`pXUOX`pezabcde{}!P!R!TR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!TeZ!e{}!P!R!TQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp",
  nodeNames: "⚠ StartCloseTag StartCloseTag StartCloseTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document EventDirectiveEvent EventDirective Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue SvelteBrackets EndTag ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst SvelteOpenTag SvelteCloseTag MismatchedCloseTag CloseTag DoctypeDecl",
  maxTerm: 70,
  context: elementContext,
  nodeProps: [
    ["closedBy", -11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, "EndTag", -4, 21, 31, 34, 37, "CloseTag", 42, "SvelteCloseTag"],
    ["group", -14, 12, 14, 15, 17, 18, 19, 20, 27, 40, 41, 42, 43, 44, 45, "Entity", 16, "Entity TextContent", -3, 29, 32, 35, "TextContent Entity"],
    ["openedBy", 28, "StartTag StartCloseTag", -4, 30, 33, 36, 38, "OpenTag", 43, "SvelteOpenTag"]
  ],
  propSources: [htmlHighlighting],
  skippedNodes: [0],
  repeatNodeCount: 9,
  tokenData: "$0X~R!_OX%QXY(QYZ(QZ]%Q]^(Q^p%Qpq(Qqr%Qrs)Xsv%Qvw)qwx+`x}%Q}!O+{!O!P%Q!P!Q.X!Q![%Q![!]/o!]!^%Q!^!_3r!_!`@v!`!a.}!a!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#U/o#U#VAh#V#]/o#]#^!(f#^#c/o#c#d!+y#d#h/o#h#i!2w#i#o/o#o#p#'Q#p%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U%Q4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qi%ZV!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%Qa%wT!f``POv%pwx&Wx!^%p!^!_&f!_~%pP&]R`POv&Ww!^&W!_~&W`&kQ!f`Ov&fx~&fX&xU!dW`POr&qrs&Wsv&qw!^&q!^!_'[!_~&qW'aR!dWOr'[sv'[w~'[h'qT!dW!f`Or'jrs&fsv'jwx'[x~'jo(]^!dW!f`!aU`POX%QXY(QYZ(QZ]%Q]^(Q^p%Qpq(Qqr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%Qk)bT!f``P!cYOv%pwx&Wx!^%p!^!_&f!_~%p~)vTc~Op*Vqs*Vst*nt!]*V!^~*V~*YTOp*Vqs*Vt!]*V!]!^*i!^~*V~*nOa~~*qROp*zq!]*z!^~*z~*}SOp*zq!]*z!]!^+Z!^~*z~+`Ob~k+iU!dW`P!ebOr&qrs&Wsv&qw!^&q!^!_'[!_~&qk,UX!dW!f``POr%Qrs%psv%Qwx&qx}%Q}!O,q!O!^%Q!^!_'j!_~%Qk,zX!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_!`%Q!`!a-g!a~%Qk-rV!dW!f`!hQ`POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%Qo.bX!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_!`%Q!`!a.}!a~%Qo/YVlU!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%Qo/|!OfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo3VX!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_;=`%Q;=`<%l/o<%l~%Qi3{U!dW!f`yPOq'jqr4_rs&fsv'jwx'[x~'ji4fZ!dW!f`Or'jrs&fsv'jwx'[x}'j}!O5X!O!f'j!f!g6_!g#W'j#W#X=W#X~'ji5`V!dW!f`Or'jrs&fsv'jwx'[x}'j}!O5u!O~'ji6OT!dW!f`!gPOr'jrs&fsv'jwx'[x~'ji6fV!dW!f`Or'jrs&fsv'jwx'[x!q'j!q!r6{!r~'ji7SV!dW!f`Or'jrs&fsv'jwx'[x!e'j!e!f7i!f~'ji7pV!dW!f`Or'jrs&fsv'jwx'[x!v'j!v!w8V!w~'ji8^V!dW!f`Or'jrs&fsv'jwx'[x!{'j!{!|8s!|~'ji8zV!dW!f`Or'jrs&fsv'jwx'[x!r'j!r!s9a!s~'ji9hV!dW!f`Or'jrs&fsv'jwx'[x!g'j!g!h9}!h~'ji:UW!dW!f`Or9}rs:nsv9}vw;Swx;rx!`9}!`!a<n!a~9}a:sT!f`Ov:nvx;Sx!`:n!`!a;e!a~:nP;VRO!`;S!`!a;`!a~;SP;eO!OPa;lQ!f`!OPOv&fx~&fX;wV!dWOr;rrs;Ssv;rvw;Sw!`;r!`!a<^!a~;rX<eR!dW!OPOr'[sv'[w~'[i<wT!dW!f`!OPOr'jrs&fsv'jwx'[x~'ji=_V!dW!f`Or'jrs&fsv'jwx'[x#c'j#c#d=t#d~'ji={V!dW!f`Or'jrs&fsv'jwx'[x#V'j#V#W>b#W~'ji>iV!dW!f`Or'jrs&fsv'jwx'[x#h'j#h#i?O#i~'ji?VV!dW!f`Or'jrs&fsv'jwx'[x#m'j#m#n?l#n~'ji?sV!dW!f`Or'jrs&fsv'jwx'[x#d'j#d#e@Y#e~'ji@aV!dW!f`Or'jrs&fsv'jwx'[x#X'j#X#Y9}#Y~'jmARViS!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%QoAu!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#]/o#]#^D{#^#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%QoEY!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#b/o#b#cH`#c#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%QoHm!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#W/o#W#XKs#X#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%QoLQ!OfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]! Q!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo! a!OfQ!dW!f`_ThS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]!$a!]!^%Q!^!_'j!_!c%Q!c!}!$a!}#R%Q#R#S!$a#S#T%Q#T#o!$a#o$}%Q$}%O/o%O%W%Q%W%o!$a%o%p%Q%p&a!$a&a&b%Q&b1p!$a1p4U/o4U4d!$a4d4e%Q4e$IS!$a$IS$I`%Q$I`$Ib!$a$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t!$a%#t&/x%Q&/x&Et!$a&Et&FV%Q&FV;'S!$a;'S;:j!'p;:j?&r%Q?&r?Ah!$a?Ah?BY%Q?BY?Mn!$a?Mn~%Qo!$p!OfQ!dW!f`^PhS`POr%Qrs%psv%Qwx&qx}%Q}!O!$a!O!P!$a!P!Q%Q!Q![!$a![!]!$a!]!^%Q!^!_'j!_!c%Q!c!}!$a!}#R%Q#R#S!$a#S#T%Q#T#o!$a#o$}%Q$}%O!$a%O%W%Q%W%o!$a%o%p%Q%p&a!$a&a&b%Q&b1p!$a1p4U!$a4U4d!$a4d4e%Q4e$IS!$a$IS$I`%Q$I`$Ib!$a$Ib$Je%Q$Je$Jg!$a$Jg$Kh%Q$Kh%#t!$a%#t&/x%Q&/x&Et!$a&Et&FV%Q&FV;'S!$a;'S;:j!'p;:j?&r%Q?&r?Ah!$a?Ah?BY%Q?BY?Mn!$a?Mn~%Qo!'yX!dW!f``POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_;=`%Q;=`<%l!$a<%l~%Qo!(s!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#b/o#b#cKs#c#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!,W!SfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#b/o#b#cKs#c#i/o#i#j!/d#j#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!/q!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#h/o#h#iKs#i#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!3U!SfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#[/o#[#]!6b#]#f/o#f#g!=Y#g#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!6o!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#]/o#]#^!9u#^#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!:S!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#g/o#g#hKs#h#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!=g!PfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#U!@j#U#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!@w!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#b/o#b#c!C}#c#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!D[!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#g/o#g#h!Gb#h#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!Go!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#]/o#]#^!Ju#^#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!KS!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#h/o#h#i!NY#i#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo!Ng!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#]/o#]#^##m#^#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qo##z!QfQ!dW!f`hS`POr%Qrs%psv%Qwx&qx}%Q}!O/o!O!P/o!P!Q%Q!Q![/o![!]/o!]!^%Q!^!_'j!_!c%Q!c!}/o!}#R%Q#R#S/o#S#T%Q#T#c/o#c#d!(f#d#o/o#o$}%Q$}%O/o%O%W%Q%W%o/o%o%p%Q%p&a/o&a&b%Q&b1p/o1p4U/o4U4d/o4d4e%Q4e$IS/o$IS$I`%Q$I`$Ib/o$Ib$Je%Q$Je$Jg/o$Jg$Kh%Q$Kh%#t/o%#t&/x%Q&/x&Et/o&Et&FV%Q&FV;'S/o;'S;:j2|;:j?&r%Q?&r?Ah/o?Ah?BY%Q?BY?Mn/o?Mn~%Qk#'Za!dW!f``POY#(`YZ%QZr#(`rs#)est#2ftv#(`vw#*bwx#-jx!P#(`!P!Q#N_!Q!^#(`!^!_#0_!_#o#(`#o#p%Q#p#q#(`#q#r%Q#r~#(`k#(i^!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`c#)l[!f``POY#)eYZ%pZv#)evw#*bwx#*yx!^#)e!^!_#,R!_#o#)e#o#p%p#p#q#)e#q#r#-Q#r~#)eR#*eTOY#*bZ#o#*b#p#q#*b#q#r#*t#r~#*bR#*yOkRR#+OZ`POY#*yYZ&WZv#*yvw#*bw!^#*y!^!_#*b!_#o#*y#o#p&W#p#q#*y#q#r#+q#r~#*yR#+xRkR`POv&Ww!^&W!_~&Wc#,WX!f`OY#,RYZ&fZv#,Rvx#*bx#o#,R#o#p&f#p#q#,R#q#r#,s#r~#,Rc#,zQ!f`kROv&fx~&fc#-ZT!f`kR`POv%pwx&Wx!^%p!^!_&f!_~%pZ#-q]!dW`POY#-jYZ&qZr#-jrs#*ysv#-jvw#*bw!^#-j!^!_#.j!_#o#-j#o#p&q#p#q#-j#q#r#/r#r~#-jZ#.oZ!dWOY#.jYZ'[Zr#.jrs#*bsv#.jvw#*bw#o#.j#o#p'[#p#q#.j#q#r#/b#r~#.jZ#/iR!dWkROr'[sv'[w~'[Z#/{U!dWkR`POr&qrs&Wsv&qw!^&q!^!_'[!_~&qk#0f[!dW!f`OY#0_YZ'jZr#0_rs#,Rsv#0_vw#*bwx#.jx#o#0_#o#p'j#p#q#0_#q#r#1[#r~#0_k#1eT!dW!f`kROr'jrs&fsv'jwx'[x~'jk#2PV!dW!f`kR`POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%Qk#2of!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#T#(`#T#U#4T#U#X#(`#X#Y#Fy#Y#]#(`#]#^#Jl#^#_#(`#_#`#Kw#`#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#4^`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#k#(`#k#l#5`#l#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#5i`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#T#(`#T#U#6k#U#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#6t`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#]#(`#]#^#7v#^#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#8P`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#h#(`#h#i#9R#i#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#9[^!dW!f``POY#:WYZ#;]Zr#:Wrs#@esv#:Wvw#*bwx#Cdx!^#:W!^!_#0_!_#o#:W#o#p#;]#p#q#:W#q#r#FR#r~#:Wk#:a^!dW!f``POY#:WYZ#;]Zr#:Wrs#@esv#:Wvw#*bwx#Cdx!^#:W!^!_#0_!_#o#:W#o#p#;]#p#q#:W#q#r#EX#r~#:Wi#;fX!dW!f``POr#;]rs#<Rsv#;]wx#>Zx!^#;]!^!_'j!_#q#;]#q#r#?m#r~#;]a#<YV!f``POv#<Rwx#<ox!^#<R!^!_&f!_#q#<R#q#r#=k#r~#<RP#<tT`POv#<ow!^#<o!_#q#<o#q#r#=T#r~#<oP#=[TzP`POv#<ow!^#<o!_#q#<o#q#r#=T#r~#<oa#=tV!f`zP`POv#<Rwx#<ox!^#<R!^!_&f!_#q#<R#q#r#=k#r~#<RX#>bW!dW`POr#>Zrs#<osv#>Zw!^#>Z!^!_'[!_#q#>Z#q#r#>z#r~#>ZX#?TW!dWzP`POr#>Zrs#<osv#>Zw!^#>Z!^!_'[!_#q#>Z#q#r#>z#r~#>Zi#?xX!dW!f`zP`POr#;]rs#<Rsv#;]wx#>Zx!^#;]!^!_'j!_#q#;]#q#r#?m#r~#;]c#@l[!f``POY#@eYZ#<RZv#@evw#*bwx#Abx!^#@e!^!_#,R!_#o#@e#o#p#<R#p#q#@e#q#r#Br#r~#@eR#AgZ`POY#AbYZ#<oZv#Abvw#*bw!^#Ab!^!_#*b!_#o#Ab#o#p#<o#p#q#Ab#q#r#BY#r~#AbR#BcTkRzP`POv#<ow!^#<o!_#q#<o#q#r#=T#r~#<oc#B}V!f`kRzP`POv#<Rwx#<ox!^#<R!^!_&f!_#q#<R#q#r#=k#r~#<RZ#Ck]!dW`POY#CdYZ#>ZZr#Cdrs#Absv#Cdvw#*bw!^#Cd!^!_#.j!_#o#Cd#o#p#>Z#p#q#Cd#q#r#Dd#r~#CdZ#DoW!dWkRzP`POr#>Zrs#<osv#>Zw!^#>Z!^!_'[!_#q#>Z#q#r#>z#r~#>Zk#EfX!dW!f`kRzP`POr#;]rs#<Rsv#;]wx#>Zx!^#;]!^!_'j!_#q#;]#q#r#?m#r~#;]k#F^X!dW!f`kR`POr#;]rs#<Rsv#;]wx#>Zx!^#;]!^!_'j!_#q#;]#q#r#?m#r~#;]k#GS`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#T#(`#T#U#HU#U#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#H_`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#V#(`#V#W#Ia#W#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#Ij`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#[#(`#[#]#9R#]#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#Ju`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#Y#(`#Y#Z#9R#Z#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#LQ`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#X#(`#X#Y#MS#Y#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#M]`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#m#(`#m#n#9R#n#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k#Nhf!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#T#(`#T#U$ |#U#X#(`#X#Y$(s#Y#]#(`#]#^$,f#^#_#(`#_#`$-q#`#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$!V`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#k#(`#k#l$#X#l#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$#b`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#T#(`#T#U$$d#U#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$$m`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#]#(`#]#^$%o#^#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$%x`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#h#(`#h#i$&z#i#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$'T^!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#o#(`#o#p%Q#p#q#(`#q#r$(P#r~#(`k$(^V!dW!f`kR{P`POr%Qrs%psv%Qwx&qx!^%Q!^!_'j!_~%Qk$(|`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#T#(`#T#U$*O#U#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$*X`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#V#(`#V#W$+Z#W#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$+d`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#[#(`#[#]$&z#]#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$,o`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#Y#(`#Y#Z$&z#Z#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$-z`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#X#(`#X#Y$.|#Y#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`k$/V`!dW!f``POY#(`YZ%QZr#(`rs#)esv#(`vw#*bwx#-jx!^#(`!^!_#0_!_#m#(`#m#n$&z#n#o#(`#o#p%Q#p#q#(`#q#r#1t#r~#(`",
  tokenizers: [scriptTokens, styleTokens, textareaTokens, tagStart, commentContent, 0, 1, 2, 3, 4],
  topRules: { "Document": [0, 13] },
  dialects: { noMatch: 0 },
  tokenPrec: 527
});

function getAttrs(element, input) {
  let attrs = Object.create(null);
  for (let att of element.firstChild.getChildren("Attribute")) {
    let name = att.getChild("AttributeName"), value = att.getChild("AttributeValue") || att.getChild("UnquotedAttributeValue");
    if (name) attrs[input.read(name.from, name.to)] =
      !value ? "" : value.name == "AttributeValue" ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);
  }
  return attrs
}

function maybeNest(node, input, tags) {
  let attrs;
  for (let tag of tags) {
    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent, input))))
      return { parser: tag.parser }
  }
  return null
}

// tags: {
//   tag: "script" | "style" | "textarea",
//   attrs?: ({[attr: string]: string}) => boolean,
//   parser: Parser
// }[]

function configureNesting(tags) {
  let script = [], style = [], textarea = [];
  for (let tag of tags) {
    let array = tag.tag == "script" ? script : tag.tag == "style" ? style : tag.tag == "textarea" ? textarea : null;
    if (!array) throw new RangeError("Only script, style, and textarea tags can host nested parsers")
    array.push(tag);
  }
  return parseMixed((node, input) => {
    let id = node.type.id;
    if (id == ScriptText) return maybeNest(node, input, script)
    if (id == StyleText) return maybeNest(node, input, style)
    if (id == TextareaText) return maybeNest(node, input, textarea)
    return null
  })
}

export { configureNesting, parser };
