import { ContextTracker, ExternalTokenizer, LRParser } from '@lezer/lr';
import { styleTags, tags } from '@lezer/highlight';
import { parseMixed } from '@lezer/common';

// This file was generated by lezer-generator. You probably shouldn't edit it.
const scriptText = 58,
  StartCloseScriptTag = 1,
  styleText = 59,
  StartCloseStyleTag = 2,
  textareaText = 60,
  StartCloseTextareaTag = 3,
  StartTag = 4,
  StartScriptTag = 5,
  StartStyleTag = 6,
  StartTextareaTag = 7,
  StartSelfClosingTag = 8,
  StartCloseTag = 9,
  NoMatchStartCloseTag = 10,
  MismatchedStartCloseTag = 11,
  missingCloseTag = 61,
  IncompleteCloseTag = 12,
  commentContent$1 = 62,
  Element = 20,
  ScriptText = 29,
  StyleText = 32,
  TextareaText = 35,
  OpenTag = 37,
  Dialect_noMatch = 0;

/* Hand-written tokenizers for HTML. */

const selfClosers = {
  area: true, base: true, br: true, col: true, command: true,
  embed: true, frame: true, hr: true, img: true, input: true,
  keygen: true, link: true, meta: true, param: true, source: true,
  track: true, wbr: true, menuitem: true
};

const implicitlyClosed = {
  dd: true, li: true, optgroup: true, option: true, p: true,
  rp: true, rt: true, tbody: true, td: true, tfoot: true,
  th: true, tr: true
};

const closeOnOpen = {
  dd: { dd: true, dt: true },
  dt: { dd: true, dt: true },
  li: { li: true },
  option: { option: true, optgroup: true },
  optgroup: { optgroup: true },
  p: {
    address: true, article: true, aside: true, blockquote: true, dir: true,
    div: true, dl: true, fieldset: true, footer: true, form: true,
    h1: true, h2: true, h3: true, h4: true, h5: true, h6: true,
    header: true, hgroup: true, hr: true, menu: true, nav: true, ol: true,
    p: true, pre: true, section: true, table: true, ul: true, each: true
  },
  rp: { rp: true, rt: true },
  rt: { rp: true, rt: true },
  tbody: { tbody: true, tfoot: true },
  td: { td: true, th: true },
  tfoot: { tbody: true },
  th: { td: true, th: true },
  thead: { tbody: true, tfoot: true },
  tr: { tr: true }
};

function nameChar(ch) {
  return ch == 45 || ch == 46 || ch == 58 || ch >= 65 && ch <= 90 || ch == 95 || ch >= 97 && ch <= 122 || ch >= 161
}

function isSpace(ch) {
  return ch == 9 || ch == 10 || ch == 13 || ch == 32
}

let cachedName = null, cachedInput = null, cachedPos = 0;
function tagNameAfter(input, offset) {
  let pos = input.pos + offset;
  if (cachedPos == pos && cachedInput == input) return cachedName
  let next = input.peek(offset);
  while (isSpace(next)) next = input.peek(++offset);
  let name = "";
  for (; ;) {
    if (!nameChar(next)) break
    name += String.fromCharCode(next);
    next = input.peek(++offset);
  }
  // Undefined to signal there's a <? or <!, null for just missing
  cachedInput = input; cachedPos = pos;
  return cachedName = name ? name.toLowerCase() : next == question || next == bang ? undefined : null
}

const lessThan = 60, greaterThan = 62, slash = 47, question = 63, bang = 33, dash = 45;

function ElementContext(name, parent) {
  this.name = name;
  this.parent = parent;
  this.hash = parent ? parent.hash : 0;
  for (let i = 0; i < name.length; i++) this.hash += (this.hash << 4) + name.charCodeAt(i) + (name.charCodeAt(i) << 8);
}

const startTagTerms = [StartTag, StartSelfClosingTag, StartScriptTag, StartStyleTag, StartTextareaTag];

const elementContext = new ContextTracker({
  start: null,
  shift(context, term, stack, input) {
    return startTagTerms.indexOf(term) > -1 ? new ElementContext(tagNameAfter(input, 1) || "", context) : context
  },
  reduce(context, term) {
    return term == Element && context ? context.parent : context
  },
  reuse(context, node, stack, input) {
    let type = node.type.id;
    return type == StartTag || type == OpenTag
      ? new ElementContext(tagNameAfter(input, 1) || "", context) : context
  },
  hash(context) { return context ? context.hash : 0 },
  strict: false
});

const tagStart = new ExternalTokenizer((input, stack) => {
  if (input.next != lessThan) {
    // End of file, close any open tags
    if (input.next < 0 && stack.context) input.acceptToken(missingCloseTag);
    return
  }
  input.advance();
  let close = input.next == slash;
  if (close) input.advance();
  let name = tagNameAfter(input, 0);
  if (name === undefined) return
  if (!name) return input.acceptToken(close ? IncompleteCloseTag : StartTag)

  let parent = stack.context ? stack.context.name : null;
  if (close) {
    if (name == parent) return input.acceptToken(StartCloseTag)
    if (parent && implicitlyClosed[parent]) return input.acceptToken(missingCloseTag, -2)
    if (stack.dialectEnabled(Dialect_noMatch)) return input.acceptToken(NoMatchStartCloseTag)
    for (let cx = stack.context; cx; cx = cx.parent) if (cx.name == name) return
    input.acceptToken(MismatchedStartCloseTag);
  } else {
    if (name == "script") return input.acceptToken(StartScriptTag)
    if (name == "style") return input.acceptToken(StartStyleTag)
    if (name == "textarea") return input.acceptToken(StartTextareaTag)
    if (selfClosers.hasOwnProperty(name)) return input.acceptToken(StartSelfClosingTag)
    if (parent && closeOnOpen[parent] && closeOnOpen[parent][name]) input.acceptToken(missingCloseTag, -1);
    else input.acceptToken(StartTag);
  }
}, { contextual: true });

const commentContent = new ExternalTokenizer(input => {
  for (let dashes = 0, i = 0; ; i++) {
    if (input.next < 0) {
      if (i) input.acceptToken(commentContent$1);
      break
    }
    if (input.next == dash) {
      dashes++;
    } else if (input.next == greaterThan && dashes >= 2) {
      if (i > 3) input.acceptToken(commentContent$1, -2);
      break
    } else {
      dashes = 0;
    }
    input.advance();
  }
});

function contentTokenizer(tag, textToken, endToken) {
  let lastState = 2 + tag.length;
  return new ExternalTokenizer(input => {
    // state means:
    // - 0 nothing matched
    // - 1 '<' matched
    // - 2 '</' + possibly whitespace matched
    // - 3-(1+tag.length) part of the tag matched
    // - lastState whole tag + possibly whitespace matched
    for (let state = 0, matchedLen = 0, i = 0; ; i++) {
      if (input.next < 0) {
        if (i) input.acceptToken(textToken);
        break
      }
      if (state == 0 && input.next == lessThan ||
        state == 1 && input.next == slash ||
        state >= 2 && state < lastState && input.next == tag.charCodeAt(state - 2)) {
        state++;
        matchedLen++;
      } else if ((state == 2 || state == lastState) && isSpace(input.next)) {
        matchedLen++;
      } else if (state == lastState && input.next == greaterThan) {
        if (i > matchedLen)
          input.acceptToken(textToken, -matchedLen);
        else
          input.acceptToken(endToken, -(matchedLen - 2));
        break
      } else if ((input.next == 10 /* '\n' */ || input.next == 13 /* '\r' */) && i) {
        input.acceptToken(textToken, 1);
        break
      } else {
        state = matchedLen = 0;
      }
      input.advance();
    }
  })
}

const scriptTokens = contentTokenizer("script", scriptText, StartCloseScriptTag);

const styleTokens = contentTokenizer("style", styleText, StartCloseStyleTag);

const textareaTokens = contentTokenizer("textarea", textareaText, StartCloseTextareaTag);

const htmlHighlighting = styleTags({
  "Text RawText": tags.content,
  "StartTag StartCloseTag SelfCloserEndTag EndTag SelfCloseEndTag": tags.angleBracket,
  "TagName": tags.tagName,
  "MismatchedCloseTag/TagName": [tags.tagName, tags.invalid],
  "AttributeName EventDirectiveEvent": tags.attributeName,
  "AttributeValue UnquotedAttributeValue EventDirective": tags.attributeValue,
  Is: tags.definitionOperator,
  "EntityReference SvelteOpenTag SvelteCloseTag CharacterReference": tags.character,
  Comment: tags.blockComment,
  "ProcessingInst": tags.processingInstruction,
  DoctypeDecl: tags.documentMeta,
  SvelteVariable: tags.angleBracket
});

// This file was generated by lezer-generator. You probably shouldn't edit it.
const parser = LRParser.deserialize({
  version: 14,
  states: ",xOVOxOOO!gQ!bO'#CqO!lQ!bO'#C{O!qQ!bO'#DOO!vQ!bO'#DRO!{Q!bO'#DTO#QOXO'#CpO#]OYO'#CpO#hO[O'#CpO%TOxO'#CpOOOW'#Cp'#CpO%[O!rO'#DUO%dQ!bO'#DZO%iQ!bO'#D[OOOW'#Do'#DoOOOW'#D^'#D^QVOxOOO%nQ#tO,59]O%yQ#tO,59gO&UQ#tO,59jO&aQ#tO,59mO&lQ#tO,59oOOOX'#Db'#DbO&wOXO'#CyO'SOXO,59[OOOY'#Dc'#DcO'[OYO'#C|O'gOYO,59[OOO['#Dd'#DdO'oO[O'#DPO'zO[O,59[OOOW'#De'#DeO(SOxO,59[O(ZQ!bO'#DSOOOW,59[,59[OOO`'#Df'#DfO(`O!rO,59pOOOW,59p,59pO(hQ!bO,59uO(mQ!bO,59vOOOW-E7[-E7[O(rQ#tO'#CsOOQO'#D_'#D_O)QQ#tO1G.wOOOX1G.w1G.wO)]Q#tO1G/ROOOY1G/R1G/RO)hQ#tO1G/UOOO[1G/U1G/UO)sQ#tO1G/XOOOW1G/X1G/XO*OQ#tO1G/ZOOOW1G/Z1G/ZOOOX-E7`-E7`O*ZQ!bO'#CzOOOW1G.v1G.vOOOY-E7a-E7aO*`Q!bO'#C}OOO[-E7b-E7bO*eQ!bO'#DQOOOW-E7c-E7cO*jQ!bO,59nOOO`-E7d-E7dOOOW1G/[1G/[OOOW1G/a1G/aOOOW1G/b1G/bO*oQ&jO,59_OOQO-E7]-E7]OOOX7+$c7+$cOOOY7+$m7+$mOOO[7+$p7+$pOOOW7+$s7+$sOOOW7+$u7+$uO*zQ!bO,59fO+PQ!bO,59iO+UQ!bO,59lOOOW1G/Y1G/YO+ZO,UO'#CvO+iO7[O'#CvOOQO1G.y1G.yOOOW1G/Q1G/QOOOW1G/T1G/TOOOW1G/W1G/WOOOO'#D`'#D`O+wO,UO,59bOOQO,59b,59bOOOO'#Da'#DaO,VO7[O,59bOOOO-E7^-E7^OOQO1G.|1G.|OOOO-E7_-E7_",
  stateData: ",t~O!bOS~OSSOTPOUQOVROWTOY]OZ[O[^O^^O_^O`^Oa^Ob^Oc^Oy^Oz^O{^O|^O!P_O!hZO~OfaO~OfbO~OfcO~OfdO~OfeO~O![fOPmP!_mP~O!]iOQpP!_pP~O!^lORsP!_sP~OSSOTPOUQOVROWTOXqOY]OZ[O[^O^^O_^O`^Oa^Ob^Oc^Oy^Oz^O{^O|^O!hZO~O!_rO~P#sO!`sO!iuO~OfvO~OfwO~O_yOhyOl|O~O_yOhyOl!OO~O_yOhyOl!QO~O_yOhyOl!SO~O_yOhyOl!UO~O![fOPmX!_mX~OP!WO!_!XO~O!]iOQpX!_pX~OQ!ZO!_!XO~O!^lORsX!_sX~OR!]O!_!XO~O!_!XO~P#sOf!_O~O!`sO!i!aO~Ol!bO~Ol!cO~Oi!dO_gXhgXlgX~O_yOhyOl!fO~O_yOhyOl!gO~O_yOhyOl!hO~O_yOhyOl!iO~O_yOhyOl!jO~Of!kO~Of!lO~Of!mO~Ol!nO~Ok!qO!d!oO!f!pO~Ol!rO~Ol!sO~Ol!tO~Oa!uOb!uO!d!wO!e!uO~Oa!xOb!xO!f!wO!g!xO~Oa!uOb!uO!d!{O!e!uO~Oa!xOb!xO!f!{O!g!xO~Obac!hy!Pz{|_^h`_~",
  goto: "%t!dPPPPPPPPPPPPPPPPPPPP!e!kP!qPP!}PP#Q#T#W#^#a#d#j#m#p#v#|!ePPPP!e!eP$S$Y$p$v$|%S%Y%`%fPPPPPPPP%lX^OX`pXUOX`pezabcde{}!P!R!TR!q!dRhUR!XhXVOX`pRkVR!XkXWOX`pRnWR!XnXXOX`pQrXR!XpXYOX`pQ`ORx`Q{aQ}bQ!PcQ!RdQ!TeZ!e{}!P!R!TQ!v!oR!z!vQ!y!pR!|!yQgUR!VgQjVR!YjQmWR![mQpXR!^pQtZR!`tS_O`ToXp",
  nodeNames: "⚠ StartCloseTag StartCloseTag StartCloseTag StartTag StartTag StartTag StartTag StartTag StartCloseTag StartCloseTag StartCloseTag IncompleteCloseTag Document EventDirectiveEvent EventDirective Text EntityReference CharacterReference InvalidEntity Element OpenTag TagName Attribute AttributeName Is AttributeValue UnquotedAttributeValue EndTag ScriptText CloseTag OpenTag StyleText CloseTag OpenTag TextareaText CloseTag OpenTag CloseTag SelfClosingTag Comment ProcessingInst SvelteOpenTag SvelteCloseTag SvelteVariable MismatchedCloseTag CloseTag DoctypeDecl",
  maxTerm: 71,
  context: elementContext,
  nodeProps: [
    ["closedBy", -11, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, "EndTag", -4, 21, 31, 34, 37, "CloseTag", 42, "SvelteCloseTag"],
    ["group", -14, 12, 14, 15, 17, 18, 19, 20, 40, 41, 42, 43, 44, 45, 46, "Entity", 16, "Entity TextContent", -3, 29, 32, 35, "TextContent Entity"],
    ["openedBy", 28, "StartTag StartCloseTag", -4, 30, 33, 36, 38, "OpenTag", 43, "SvelteOpenTag"]
  ],
  propSources: [htmlHighlighting],
  skippedNodes: [0],
  repeatNodeCount: 9,
  tokenData: "%Dk!aR!bOX%ZXY*cYZ*cZ]%Z]^*c^p%Zpq*cqr%Zrs+jsv%Zvw,Swx3ix}%Z}!O4U!O!P%Z!P!Q7}!Q![%Z![!]9e!]!^%Z!^!_?Q!_!`LU!`!a8s!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#U9e#U#VLv#V#W!<g#W#]9e#]#^!Lx#^#c9e#c#d#!}#d#h9e#h#i#+_#i#o9e#o#p$!a#p$f%Z$f$g&q$g%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U%Z4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!Z%fckW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a$f%Z$f$g&q$g~%Z!R&zV!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&qq'hT!gp`POv'awx'wx!^'a!^!_(V!_~'aP'|R`POv'ww!^'w!_~'wp([Q!gpOv(Vx~(Va(iU!e``POr(brs'wsv(bw!^(b!^!_({!_~(b`)QR!e`Or({sv({w~({!Q)bT!e`!gpOr)Zrs(Vsv)Zwx({x~)ZW)vXkWOX)qZ])q^p)qqr)qsw)qx!P)q!Q!^)q!a$f)q$g~)q!a*n^!e`!gp!b^`POX&qXY*cYZ*cZ]&q]^*c^p&qpq*cqr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&q!Z+sT!dh!gp`POv'awx'wx!^'a!^!_(V!_~'a!Z,ZbkWcPOX-cXZ.pZ]-c]^.p^p-cqr-crs.pst/{tw-cwx.px!P-c!P!Q.p!Q!]-c!]!^)q!^!a.p!a$f-c$f$g.p$g~-c!Z-hbkWOX-cXZ.pZ]-c]^.p^p-cqr-crs.pst)qtw-cwx.px!P-c!P!Q.p!Q!]-c!]!^/X!^!a.p!a$f-c$f$g.p$g~-c!R.sTOp.pqs.pt!].p!]!^/S!^~.p!R/XOa!R!Z/`XkWa!ROX)qZ])q^p)qqr)qsw)qx!P)q!Q!^)q!a$f)q$g~)q!Z0QakWOX1VXZ2aZ]1V]^2a^p1Vqr1Vrs2asw1Vwx2ax!P1V!P!Q2a!Q!]1V!]!^)q!^!a2a!a$f1V$f$g2a$g~1V!Z1[akWOX1VXZ2aZ]1V]^2a^p1Vqr1Vrs2asw1Vwx2ax!P1V!P!Q2a!Q!]1V!]!^2u!^!a2a!a$f1V$f$g2a$g~1V!R2dSOp2aq!]2a!]!^2p!^~2a!R2uOb!R!Z2|XkWb!ROX)qZ])q^p)qqr)qsw)qx!P)q!Q!^)q!a$f)q$g~)q!Z3rU!fx!e``POr(brs'wsv(bw!^(b!^!_({!_~(b!]4aekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O5r!O!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a$f%Z$f$g&q$g~%Z!]5}dkW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!`&q!`!a7]!a$f%Z$f$g&q$g~%Z!T7hV!e`!gp!iQ`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&q!X8WX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_!`&q!`!a8s!a~&q!X9OVlU!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&q!a9t!YfQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a=oekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a$f%Z$f$g&q$g;=`%Z;=`<%l9e<%l~%Z!R?ZU!e`!gpyPOq)Zqr?mrs(Vsv)Zwx({x~)Z!R?tZ!e`!gpOr)Zrs(Vsv)Zwx({x})Z}!O@g!O!f)Z!f!gAm!g#W)Z#W#XHf#X~)Z!R@nV!e`!gpOr)Zrs(Vsv)Zwx({x})Z}!OAT!O~)Z!RA^T!e`!gp!hPOr)Zrs(Vsv)Zwx({x~)Z!RAtV!e`!gpOr)Zrs(Vsv)Zwx({x!q)Z!q!rBZ!r~)Z!RBbV!e`!gpOr)Zrs(Vsv)Zwx({x!e)Z!e!fBw!f~)Z!RCOV!e`!gpOr)Zrs(Vsv)Zwx({x!v)Z!v!wCe!w~)Z!RClV!e`!gpOr)Zrs(Vsv)Zwx({x!{)Z!{!|DR!|~)Z!RDYV!e`!gpOr)Zrs(Vsv)Zwx({x!r)Z!r!sDo!s~)Z!RDvV!e`!gpOr)Zrs(Vsv)Zwx({x!g)Z!g!hE]!h~)Z!REdW!e`!gpOrE]rsE|svE]vwFbwxGQx!`E]!`!aG|!a~E]qFRT!gpOvE|vxFbx!`E|!`!aFs!a~E|PFeRO!`Fb!`!aFn!a~FbPFsO!PPqFzQ!gp!PPOv(Vx~(VaGVV!e`OrGQrsFbsvGQvwFbw!`GQ!`!aGl!a~GQaGsR!e`!PPOr({sv({w~({!RHVT!e`!gp!PPOr)Zrs(Vsv)Zwx({x~)Z!RHmV!e`!gpOr)Zrs(Vsv)Zwx({x#c)Z#c#dIS#d~)Z!RIZV!e`!gpOr)Zrs(Vsv)Zwx({x#V)Z#V#WIp#W~)Z!RIwV!e`!gpOr)Zrs(Vsv)Zwx({x#h)Z#h#iJ^#i~)Z!RJeV!e`!gpOr)Zrs(Vsv)Zwx({x#m)Z#m#nJz#n~)Z!RKRV!e`!gpOr)Zrs(Vsv)Zwx({x#d)Z#d#eKh#e~)Z!RKoV!e`!gpOr)Zrs(Vsv)Zwx({x#X)Z#X#YE]#Y~)Z!VLaViS!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&q!aMV![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#]9e#]#^!!{#^#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!#[![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#b9e#b#c!'Q#c#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!'a![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#W9e#W#X!+V#X#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!+f!YfQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]!/U!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!/g!YfQkW!e`!gp_ThS`POX!3VXZ!4oZ]!3V]^!4o^p!3Vpq!4oqr!3Vrs!5asv!3Vvw)qwx!6Zx}!3V}!O!6v!O!P!6v!P!Q!4o!Q![!6v![!]!6v!]!^!3V!^!_)Z!_!a!4o!a!c!3V!c!}!6v!}#R!3V#R#S!6v#S#T!3V#T#o!6v#o$f!3V$f$g!4o$g$}!3V$}%O!6v%O%W!3V%W%o!6v%o%p!3V%p&a!6v&a&b!3V&b1p!6v1p4U!6v4U4d!6v4d4e!3V4e$IS!6v$IS$I`!3V$I`$Ib!6v$Ib$Je!3V$Je$Jg!6v$Jg$Kh!3V$Kh%#t!6v%#t&/x!3V&/x&Et!6v&Et&FV!3V&FV;'S!6v;'S;:j!:w;:j?&r!3V?&r?Ah!6v?Ah?BY!3V?BY?Mn!6v?Mn~!3V!Z!3dckW!e`!gp^P`POX!3VXZ!4oZ]!3V]^!4o^p!3Vpq!4oqr!3Vrs!5asv!3Vvw)qwx!6Zx!P!3V!P!Q!4o!Q!^!3V!^!_)Z!_!a!4o!a$f!3V$f$g!4o$g~!3V!R!4zV!e`!gp^P`POr!4ors!5asv!4owx!6Zx!^!4o!^!_)Z!_~!4oq!5jT!gp^P`POv!5awx!5yx!^!5a!^!_(V!_~!5aP!6QR^P`POv!5yw!^!5y!_~!5ya!6dU!e`^P`POr!6Zrs!5ysv!6Zw!^!6Z!^!_({!_~!6Z!a!7X!YfQkW!e`!gp^PhS`POX!3VXZ!4oZ]!3V]^!4o^p!3Vpq!4oqr!3Vrs!5asv!3Vvw)qwx!6Zx}!3V}!O!6v!O!P!6v!P!Q!4o!Q![!6v![!]!6v!]!^!3V!^!_)Z!_!a!4o!a!c!3V!c!}!6v!}#R!3V#R#S!6v#S#T!3V#T#o!6v#o$f!3V$f$g!4o$g$}!3V$}%O!6v%O%W!3V%W%o!6v%o%p!3V%p&a!6v&a&b!3V&b1p!6v1p4U!6v4U4d!6v4d4e!3V4e$IS!6v$IS$I`!3V$I`$Ib!6v$Ib$Je!3V$Je$Jg!6v$Jg$Kh!3V$Kh%#t!6v%#t&/x!3V&/x&Et!6v&Et&FV!3V&FV;'S!6v;'S;:j!:w;:j?&r!3V?&r?Ah!6v?Ah?BY!3V?BY?Mn!6v?Mn~!3V!a!;UekW!e`!gp^P`POX!3VXZ!4oZ]!3V]^!4o^p!3Vpq!4oqr!3Vrs!5asv!3Vvw)qwx!6Zx!P!3V!P!Q!4o!Q!^!3V!^!_)Z!_!a!4o!a$f!3V$f$g!4o$g;=`!3V;=`<%l!6v<%l~!3V!a!<v![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#`9e#`#a!@l#a#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!@{!ZfQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#U!Dn#U#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!D}![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#g9e#g#h!Hs#h#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!IS![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#g9e#g#h!+V#h#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a!MX![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#b9e#b#c!+V#c#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a##^!^fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#b9e#b#c!+V#c#i9e#i#j#'Y#j#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#'i![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#h9e#h#i!+V#i#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#+n!^fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#[9e#[#]#/j#]#f9e#f#g#3o#g#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#/y![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#]9e#]#^!Hs#^#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#4O!ZfQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#U#7q#U#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#8Q![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#b9e#b#c#;v#c#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#<V![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#g9e#g#h#?{#h#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#@[![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#]9e#]#^#DQ#^#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#Da![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#h9e#h#i#HV#i#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#Hf![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#]9e#]#^#L[#^#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!a#Lk![fQkW!e`!gphS`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx}%Z}!O9e!O!P9e!P!Q&q!Q![9e![!]9e!]!^%Z!^!_)Z!_!a&q!a!c%Z!c!}9e!}#R%Z#R#S9e#S#T%Z#T#c9e#c#d!Lx#d#o9e#o$f%Z$f$g&q$g$}%Z$}%O9e%O%W%Z%W%o9e%o%p%Z%p&a9e&a&b%Z&b1p9e1p4U9e4U4d9e4d4e%Z4e$IS9e$IS$I`%Z$I`$Ib9e$Ib$Je%Z$Je$Jg9e$Jg$Kh%Z$Kh%#t9e%#t&/x%Z&/x&Et9e&Et&FV%Z&FV;'S9e;'S;:j=d;:j?&r%Z?&r?Ah9e?Ah?BY%Z?BY?Mn9e?Mn~%Z!Z$!ljkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st$4ptv$$^vw$0|wx$+wx!P$$^!P!Q%!p!Q!^$$^!^!_$.r!_!a$&T!a!b$$^!b!c%-W!c#o$$^#o#p%Z#p#q$$^#q#r%Z#r$f$$^$f$g$&T$g~$$^!Z$$ihkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!R$&^_!e`!gp`POr$&Trs$']st&qtv$&Tvw$(`wx$+wx!P$&T!P!Q&q!Q!^$&T!^!_$.r!_#o$&T#o#p&q#p#q$&T#q#r$0[#r~$&Tq$'d^!gp`POs$']st'atv$']vw$(`wx$(zx!P$']!P!Q'a!Q!^$']!^!_$*Y!_#o$']#o#p'a#p#q$']#q#r$+_#r~$']P$(cUOs$(`t!P$(`!Q#o$(`#p#q$(`#q#r$(u#r~$(`P$(zO|PP$)P]`POs$(zst'wtv$(zvw$(`w!P$(z!P!Q'w!Q!^$(z!^!_$(`!_#o$(z#o#p'w#p#q$(z#q#r$)x#r~$(zP$*PR|P`POv'ww!^'w!_~'wq$*_Z!gpOs$*Yst(Vtv$*Yvx$(`x!P$*Y!P!Q(V!Q#o$*Y#o#p(V#p#q$*Y#q#r$+Q#r~$*Yq$+XQ!gp|POv(Vx~(Vq$+hT!gp|P`POv'awx'wx!^'a!^!_(V!_~'aa$,O^!e``POr$+wrs$(zst(btv$+wvw$(`w!P$+w!P!Q(b!Q!^$+w!^!_$,z!_#o$+w#o#p(b#p#q$+w#q#r$.V#r~$+wa$-P[!e`Or$,zrs$(`st({tv$,zvw$(`w!P$,z!P!Q({!Q#o$,z#o#p({#p#q$,z#q#r$-u#r~$,za$-|R!e`|POr({sv({w~({a$.`U!e`|P`POr(brs'wsv(bw!^(b!^!_({!_~(b!R$.y]!e`!gpOr$.rrs$*Yst)Ztv$.rvw$(`wx$,zx!P$.r!P!Q)Z!Q#o$.r#o#p)Z#p#q$.r#q#r$/r#r~$.r!R$/{T!e`!gp|POr)Zrs(Vsv)Zwx({x~)Z!R$0gV!e`!gp|P`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&qX$1RekWOX$0|XZ$(`Z]$0|]^$(`^p$0|pq$(`qr$0|rs$(`st)qtw$0|wx$(`x!P$0|!Q!^$0|!^!a$(`!a#o$0|#o#p)q#p#q$0|#q#r$2d#r$f$0|$f$g$(`$g~$0|X$2kXkW|POX)qZ])q^p)qqr)qsw)qx!P)q!Q!^)q!a$f)q$g~)q!Z$3eckW!e`!gp|P`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a$f%Z$f$g&q$g~%Z!Z$4{kkW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#T%Z#T#U$6p#U#X%Z#X#Y$GQ#Y#]%Z#]#^$Kx#^#_%Z#_#`$Mf#`$f%Z$f$g&q$g~%Z!Z$6{ekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#k%Z#k#l$8^#l$f%Z$f$g&q$g~%Z!Z$8iekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#T%Z#T#U$9z#U$f%Z$f$g&q$g~%Z!Z$:VekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#]%Z#]#^$;h#^$f%Z$f$g&q$g~%Z!Z$;sekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#h%Z#h#i$=U#i$f%Z$f$g&q$g~%Z!Z$=ackW!e`!gp`POX$>lXZ$@YZ]$>l]^$@Y^p$>lpq$@Yqr$>lrs$AOsv$>lvw)qwx$CWx!P$>l!P!Q$@Y!Q!^$>l!^!_)Z!_!a$@Y!a$f$>l$f$g$@Y$g~$>l!Z$>wekW!e`!gp`POX$>lXZ$@YZ]$>l]^$@Y^p$>lpq$@Yqr$>lrs$AOsv$>lvw)qwx$CWx!P$>l!P!Q$@Y!Q!^$>l!^!_)Z!_!a$@Y!a#q$>l#q#r$Eb#r$f$>l$f$g$@Y$g~$>l!R$@cX!e`!gp`POr$@Yrs$AOsv$@Ywx$CWx!^$@Y!^!_)Z!_#q$@Y#q#r$Dj#r~$@Yq$AVV!gp`POv$AOwx$Alx!^$AO!^!_(V!_#q$AO#q#r$Bh#r~$AOP$AqT`POv$Alw!^$Al!_#q$Al#q#r$BQ#r~$AlP$BXTzP`POv$Alw!^$Al!_#q$Al#q#r$BQ#r~$Alq$BqV!gpzP`POv$AOwx$Alx!^$AO!^!_(V!_#q$AO#q#r$Bh#r~$AOa$C_W!e``POr$CWrs$Alsv$CWw!^$CW!^!_({!_#q$CW#q#r$Cw#r~$CWa$DQW!e`zP`POr$CWrs$Alsv$CWw!^$CW!^!_({!_#q$CW#q#r$Cw#r~$CW!R$DuX!e`!gpzP`POr$@Yrs$AOsv$@Ywx$CWx!^$@Y!^!_)Z!_#q$@Y#q#r$Dj#r~$@Y!Z$EoekW!e`!gpzP`POX$>lXZ$@YZ]$>l]^$@Y^p$>lpq$@Yqr$>lrs$AOsv$>lvw)qwx$CWx!P$>l!P!Q$@Y!Q!^$>l!^!_)Z!_!a$@Y!a#q$>l#q#r$Eb#r$f$>l$f$g$@Y$g~$>l!Z$G]ekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#T%Z#T#U$Hn#U$f%Z$f$g&q$g~%Z!Z$HyekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#V%Z#V#W$J[#W$f%Z$f$g&q$g~%Z!Z$JgekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#[%Z#[#]$=U#]$f%Z$f$g&q$g~%Z!Z$LTekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#Y%Z#Y#Z$=U#Z$f%Z$f$g&q$g~%Z!Z$MqekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#X%Z#X#Y% S#Y$f%Z$f$g&q$g~%Z!Z% _ekW!e`!gp`POX%ZXZ&qZ]%Z]^&q^p%Zpq&qqr%Zrs'asv%Zvw)qwx(bx!P%Z!P!Q&q!Q!^%Z!^!_)Z!_!a&q!a#m%Z#m#n$=U#n$f%Z$f$g&q$g~%Z!R%!y_!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#T&q#T#U%#x#U#X&q#X#Y%(f#Y#]&q#]#^%*v#^#_&q#_#`%+l#`~&q!R%$RX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#k&q#k#l%$n#l~&q!R%$wX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#T&q#T#U%%d#U~&q!R%%mX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#]&q#]#^%&Y#^~&q!R%&cX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#h&q#h#i%'O#i~&q!R%'XX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#q&q#q#r%'t#r~&q!R%(PV!e`!gp{P`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_~&q!R%(oX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#T&q#T#U%)[#U~&q!R%)eX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#V&q#V#W%*Q#W~&q!R%*ZX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#[&q#[#]%'O#]~&q!R%+PX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#Y&q#Y#Z%'O#Z~&q!R%+uX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#X&q#X#Y%,b#Y~&q!R%,kX!e`!gp`POr&qrs'asv&qwx(bx!^&q!^!_)Z!_#m&q#m#n%'O#n~&q!Z%-cmkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#V$$^#V#W%/^#W#X%7Q#X#[$$^#[#]%>t#]#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%/ijkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#c$$^#c#d%1Z#d#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%1fjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#b$$^#b#c%3W#c#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%3cjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#g$$^#g#h%5T#h#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%5`jkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#h$$^#h#i$$^#i#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%7]jkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#X$$^#X#Y%8}#Y#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%9YjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#U$$^#U#V%:z#V#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%;VjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#i$$^#i#j%<w#j#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%=SjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#Z$$^#Z#[$$^#[#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%?PjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#h$$^#h#i%@q#i#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%@|jkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#a$$^#a#b%Bn#b#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^!Z%ByjkW!e`!gp`POX$$^XZ$&TZ]$$^]^$&T^p$$^pq$&Tqr$$^rs$']st%Ztv$$^vw$0|wx$+wx!P$$^!P!Q&q!Q!^$$^!^!_$.r!_!a$&T!a#`$$^#`#a$$^#a#o$$^#o#p%Z#p#q$$^#q#r$3W#r$f$$^$f$g$&T$g~$$^",
  tokenizers: [scriptTokens, styleTokens, textareaTokens, tagStart, commentContent, 0, 1, 2, 3, 4, 5],
  topRules: { "Document": [0, 13] },
  dialects: { noMatch: 0 },
  tokenPrec: 527
});

function getAttrs(element, input) {
  let attrs = Object.create(null);
  for (let att of element.firstChild.getChildren("Attribute")) {
    let name = att.getChild("AttributeName"), value = att.getChild("AttributeValue") || att.getChild("UnquotedAttributeValue");
    if (name) attrs[input.read(name.from, name.to)] =
      !value ? "" : value.name == "AttributeValue" ? input.read(value.from + 1, value.to - 1) : input.read(value.from, value.to);
  }
  return attrs
}

function maybeNest(node, input, tags) {
  let attrs;
  for (let tag of tags) {
    if (!tag.attrs || tag.attrs(attrs || (attrs = getAttrs(node.node.parent, input))))
      return { parser: tag.parser }
  }
  return null
}

// tags: {
//   tag: "script" | "style" | "textarea",
//   attrs?: ({[attr: string]: string}) => boolean,
//   parser: Parser
// }[]

function configureNesting(tags) {
  let script = [], style = [], textarea = [];
  for (let tag of tags) {
    let array = tag.tag == "script" ? script : tag.tag == "style" ? style : tag.tag == "textarea" ? textarea : null;
    if (!array) throw new RangeError("Only script, style, and textarea tags can host nested parsers")
    array.push(tag);
  }
  return parseMixed((node, input) => {
    let id = node.type.id;
    if (id == ScriptText) return maybeNest(node, input, script)
    if (id == StyleText) return maybeNest(node, input, style)
    if (id == TextareaText) return maybeNest(node, input, textarea)
    return null
  })
}

export { configureNesting, parser };
