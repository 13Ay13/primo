"use strict";function t(t){return t&&"object"==typeof t&&"default"in t?t.default:t}Object.defineProperty(exports,"__esModule",{value:!0});var e=t(require("autoprefixer")),n=t(require("postcss")),i=t(require("precss")),s=t(require("tailwindcss")),r=t(require("clean-css")),c=t(require("fs")),a=t(require("prettier")),l=t(require("lodash"));async function o(t,c,a){let{tailwindConfig:l,includeBase:o=!1,purge:d=!1,includeTailwind:u=!1}=a;try{l=l?new Function("return "+l)():{},l={...l,purge:{enabled:d,content:[{raw:c,extension:"html"}]}}}catch(t){return t}const p=s(l),f=`    ${o?"\n      @tailwind base;":""}    ${u?"\n      @tailwind components;      @tailwind utilities;    ":""}\n    \n  ${t}`;try{const t=await n([p,i,e]).process(f,{from:void 0,to:"styles.css"}).catch(t=>{console.error(t)});return t?u?new r({}).minify(t.css).styles:t.css:"could not process"}catch(t){return t}}var d={processPostCSS:o,buildSite:async function({pages:t,siteStyles:e}){c.mkdir("./build",{recursive:!0},t=>{if(t)throw t});const n=e.final,i=a.format(n,{parser:"css"});c.writeFile("./build/styles.css",i,t=>{if(t)throw t}),t.forEach(async t=>{const n=function({id:t,title:e,content:n,dependencies:i,styles:s}){let r="";n.forEach(t=>{r+=`<section id="section-${t.id}">\n\t<div class="columns flex flex-wrap ${"contained"===t.width?"container":""}">\n`,t.columns.forEach(t=>{r+=`\t\t<div class="column ${t.size}" id="column-${t.id}">\n`,t.rows.forEach(t=>{r+="component"===t.type?`\t\t\t<div class="primo-component">\n\t\t\t\t<div id="component-${t.id}" class="w-full">${t.value.final.html}</div>\n\t\t\t\t<script>${t.value.final.js}<\/script>\n\t\t\t</div>\n`:`\t\t\t<div class="primo-content">\n\t\t\t\t${t.value.html}\n\t\t\t</div>\n`}),r+="\t\t</div>\n"}),r+="\t</div>\n</section>\n"});return r=r.replace(/href=(['"])\/([\S]+)(\1)[^>\s]*/g,"href='/$2.html'"),`\n      <!doctype html>\n\n      <html lang="en">\n      <head>\n        <meta charset="utf-8">\n        <title>${e}</title>\n        <meta name="viewport" content="width=device-width, initial-scale=1.0">\n        <link rel="stylesheet" type="text/css" href="./styles.css" />\n        <link rel="stylesheet" type="text/css" href="./${t}.css" />\n        <script src="./${t}.js"><\/script>\n        ${i.headEmbed}\n      </head>\n      <body data-instant-intensity="all" class="primo-page">   \n        ${r}\n        <script src="https://cdnjs.cloudflare.com/ajax/libs/instant.page/5.1.0/instantpage.js" integrity="sha256-DdSiNPR71ROAVMqT6NiHagLAtZv9EHeByYuVxygZM5g=" crossorigin="anonymous"><\/script>\n      </body>\n      </html>\n    `}(t),i=a.format(n,{parser:"html"});c.writeFile(`./build/${t.id}.html`,i,t=>{if(t)throw t});const s=await async function(t,e,n,i){const s=l.flatMapDeep(t,t=>t.columns.map(t=>t.rows.filter(t=>"component"===t.type))).map(t=>`#component-${t.id} {${t.value.raw.css}}`).join("\n"),r=n+s;return await o(r,e,{includeBase:!0,includeTailwind:!0,purge:!0,tailwindConfig:i})}(t.content,n,e.raw+t.styles.raw,e.tailwind),r=a.format(s,{parser:"css"});c.writeFile(`./build/${t.id}.css`,r,t=>{if(t)throw t})})}};exports.default=d;
