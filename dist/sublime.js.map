{"version":3,"file":"sublime.js","sources":["../node_modules/codemirror/addon/search/searchcursor.js","../node_modules/codemirror/addon/edit/matchbrackets.js","../node_modules/codemirror/keymap/sublime.js"],"sourcesContent":["// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"))\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod)\n  else // Plain browser env\n    mod(CodeMirror)\n})(function(CodeMirror) {\n  \"use strict\"\n  var Pos = CodeMirror.Pos\n\n  function regexpFlags(regexp) {\n    var flags = regexp.flags\n    return flags != null ? flags : (regexp.ignoreCase ? \"i\" : \"\")\n      + (regexp.global ? \"g\" : \"\")\n      + (regexp.multiline ? \"m\" : \"\")\n  }\n\n  function ensureFlags(regexp, flags) {\n    var current = regexpFlags(regexp), target = current\n    for (var i = 0; i < flags.length; i++) if (target.indexOf(flags.charAt(i)) == -1)\n      target += flags.charAt(i)\n    return current == target ? regexp : new RegExp(regexp.source, target)\n  }\n\n  function maybeMultiline(regexp) {\n    return /\\\\s|\\\\n|\\n|\\\\W|\\\\D|\\[\\^/.test(regexp.source)\n  }\n\n  function searchRegexpForward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, last = doc.lastLine(); line <= last; line++, ch = 0) {\n      regexp.lastIndex = ch\n      var string = doc.getLine(line), match = regexp.exec(string)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpForwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpForward(doc, regexp, start)\n\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunk = 1\n    for (var line = start.line, last = doc.lastLine(); line <= last;) {\n      // This grows the search buffer in exponentially-sized chunks\n      // between matches, so that nearby matches are fast and don't\n      // require concatenating the whole document (in case we're\n      // searching for something that has tons of matches), but at the\n      // same time, the amount of retries is limited.\n      for (var i = 0; i < chunk; i++) {\n        if (line > last) break\n        var curLine = doc.getLine(line++)\n        string = string == null ? curLine : string + \"\\n\" + curLine\n      }\n      chunk = chunk * 2\n      regexp.lastIndex = start.ch\n      var match = regexp.exec(string)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = start.line + before.length - 1, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  function lastMatchIn(string, regexp, endMargin) {\n    var match, from = 0\n    while (from <= string.length) {\n      regexp.lastIndex = from\n      var newMatch = regexp.exec(string)\n      if (!newMatch) break\n      var end = newMatch.index + newMatch[0].length\n      if (end > string.length - endMargin) break\n      if (!match || end > match.index + match[0].length)\n        match = newMatch\n      from = newMatch.index + 1\n    }\n    return match\n  }\n\n  function searchRegexpBackward(doc, regexp, start) {\n    regexp = ensureFlags(regexp, \"g\")\n    for (var line = start.line, ch = start.ch, first = doc.firstLine(); line >= first; line--, ch = -1) {\n      var string = doc.getLine(line)\n      var match = lastMatchIn(string, regexp, ch < 0 ? 0 : string.length - ch)\n      if (match)\n        return {from: Pos(line, match.index),\n                to: Pos(line, match.index + match[0].length),\n                match: match}\n    }\n  }\n\n  function searchRegexpBackwardMultiline(doc, regexp, start) {\n    if (!maybeMultiline(regexp)) return searchRegexpBackward(doc, regexp, start)\n    regexp = ensureFlags(regexp, \"gm\")\n    var string, chunkSize = 1, endMargin = doc.getLine(start.line).length - start.ch\n    for (var line = start.line, first = doc.firstLine(); line >= first;) {\n      for (var i = 0; i < chunkSize && line >= first; i++) {\n        var curLine = doc.getLine(line--)\n        string = string == null ? curLine : curLine + \"\\n\" + string\n      }\n      chunkSize *= 2\n\n      var match = lastMatchIn(string, regexp, endMargin)\n      if (match) {\n        var before = string.slice(0, match.index).split(\"\\n\"), inside = match[0].split(\"\\n\")\n        var startLine = line + before.length, startCh = before[before.length - 1].length\n        return {from: Pos(startLine, startCh),\n                to: Pos(startLine + inside.length - 1,\n                        inside.length == 1 ? startCh + inside[0].length : inside[inside.length - 1].length),\n                match: match}\n      }\n    }\n  }\n\n  var doFold, noFold\n  if (String.prototype.normalize) {\n    doFold = function(str) { return str.normalize(\"NFD\").toLowerCase() }\n    noFold = function(str) { return str.normalize(\"NFD\") }\n  } else {\n    doFold = function(str) { return str.toLowerCase() }\n    noFold = function(str) { return str }\n  }\n\n  // Maps a position in a case-folded line back to a position in the original line\n  // (compensating for codepoints increasing in number during folding)\n  function adjustPos(orig, folded, pos, foldFunc) {\n    if (orig.length == folded.length) return pos\n    for (var min = 0, max = pos + Math.max(0, orig.length - folded.length);;) {\n      if (min == max) return min\n      var mid = (min + max) >> 1\n      var len = foldFunc(orig.slice(0, mid)).length\n      if (len == pos) return mid\n      else if (len > pos) max = mid\n      else min = mid + 1\n    }\n  }\n\n  function searchStringForward(doc, query, start, caseFold) {\n    // Empty string would match anything and never progress, so we\n    // define it to match nothing instead.\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, last = doc.lastLine() + 1 - lines.length; line <= last; line++, ch = 0) {\n      var orig = doc.getLine(line).slice(ch), string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.indexOf(lines[0])\n        if (found == -1) continue search\n        var start = adjustPos(orig, string, found, fold) + ch\n        return {from: Pos(line, adjustPos(orig, string, found, fold) + ch),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold) + ch)}\n      } else {\n        var cutFrom = string.length - lines[0].length\n        if (string.slice(cutFrom) != lines[0]) continue search\n        for (var i = 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(line + i)) != lines[i]) continue search\n        var end = doc.getLine(line + lines.length - 1), endString = fold(end), lastLine = lines[lines.length - 1]\n        if (endString.slice(0, lastLine.length) != lastLine) continue search\n        return {from: Pos(line, adjustPos(orig, string, cutFrom, fold) + ch),\n                to: Pos(line + lines.length - 1, adjustPos(end, endString, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function searchStringBackward(doc, query, start, caseFold) {\n    if (!query.length) return null\n    var fold = caseFold ? doFold : noFold\n    var lines = fold(query).split(/\\r|\\n\\r?/)\n\n    search: for (var line = start.line, ch = start.ch, first = doc.firstLine() - 1 + lines.length; line >= first; line--, ch = -1) {\n      var orig = doc.getLine(line)\n      if (ch > -1) orig = orig.slice(0, ch)\n      var string = fold(orig)\n      if (lines.length == 1) {\n        var found = string.lastIndexOf(lines[0])\n        if (found == -1) continue search\n        return {from: Pos(line, adjustPos(orig, string, found, fold)),\n                to: Pos(line, adjustPos(orig, string, found + lines[0].length, fold))}\n      } else {\n        var lastLine = lines[lines.length - 1]\n        if (string.slice(0, lastLine.length) != lastLine) continue search\n        for (var i = 1, start = line - lines.length + 1; i < lines.length - 1; i++)\n          if (fold(doc.getLine(start + i)) != lines[i]) continue search\n        var top = doc.getLine(line + 1 - lines.length), topString = fold(top)\n        if (topString.slice(topString.length - lines[0].length) != lines[0]) continue search\n        return {from: Pos(line + 1 - lines.length, adjustPos(top, topString, top.length - lines[0].length, fold)),\n                to: Pos(line, adjustPos(orig, string, lastLine.length, fold))}\n      }\n    }\n  }\n\n  function SearchCursor(doc, query, pos, options) {\n    this.atOccurrence = false\n    this.doc = doc\n    pos = pos ? doc.clipPos(pos) : Pos(0, 0)\n    this.pos = {from: pos, to: pos}\n\n    var caseFold\n    if (typeof options == \"object\") {\n      caseFold = options.caseFold\n    } else { // Backwards compat for when caseFold was the 4th argument\n      caseFold = options\n      options = null\n    }\n\n    if (typeof query == \"string\") {\n      if (caseFold == null) caseFold = false\n      this.matches = function(reverse, pos) {\n        return (reverse ? searchStringBackward : searchStringForward)(doc, query, pos, caseFold)\n      }\n    } else {\n      query = ensureFlags(query, \"gm\")\n      if (!options || options.multiline !== false)\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackwardMultiline : searchRegexpForwardMultiline)(doc, query, pos)\n        }\n      else\n        this.matches = function(reverse, pos) {\n          return (reverse ? searchRegexpBackward : searchRegexpForward)(doc, query, pos)\n        }\n    }\n  }\n\n  SearchCursor.prototype = {\n    findNext: function() {return this.find(false)},\n    findPrevious: function() {return this.find(true)},\n\n    find: function(reverse) {\n      var result = this.matches(reverse, this.doc.clipPos(reverse ? this.pos.from : this.pos.to))\n\n      // Implements weird auto-growing behavior on null-matches for\n      // backwards-compatibility with the vim code (unfortunately)\n      while (result && CodeMirror.cmpPos(result.from, result.to) == 0) {\n        if (reverse) {\n          if (result.from.ch) result.from = Pos(result.from.line, result.from.ch - 1)\n          else if (result.from.line == this.doc.firstLine()) result = null\n          else result = this.matches(reverse, this.doc.clipPos(Pos(result.from.line - 1)))\n        } else {\n          if (result.to.ch < this.doc.getLine(result.to.line).length) result.to = Pos(result.to.line, result.to.ch + 1)\n          else if (result.to.line == this.doc.lastLine()) result = null\n          else result = this.matches(reverse, Pos(result.to.line + 1, 0))\n        }\n      }\n\n      if (result) {\n        this.pos = result\n        this.atOccurrence = true\n        return this.pos.match || true\n      } else {\n        var end = Pos(reverse ? this.doc.firstLine() : this.doc.lastLine() + 1, 0)\n        this.pos = {from: end, to: end}\n        return this.atOccurrence = false\n      }\n    },\n\n    from: function() {if (this.atOccurrence) return this.pos.from},\n    to: function() {if (this.atOccurrence) return this.pos.to},\n\n    replace: function(newText, origin) {\n      if (!this.atOccurrence) return\n      var lines = CodeMirror.splitLines(newText)\n      this.doc.replaceRange(lines, this.pos.from, this.pos.to, origin)\n      this.pos.to = Pos(this.pos.from.line + lines.length - 1,\n                        lines[lines.length - 1].length + (lines.length == 1 ? this.pos.from.ch : 0))\n    }\n  }\n\n  CodeMirror.defineExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this.doc, query, pos, caseFold)\n  })\n  CodeMirror.defineDocExtension(\"getSearchCursor\", function(query, pos, caseFold) {\n    return new SearchCursor(this, query, pos, caseFold)\n  })\n\n  CodeMirror.defineExtension(\"selectMatches\", function(query, caseFold) {\n    var ranges = []\n    var cur = this.getSearchCursor(query, this.getCursor(\"from\"), caseFold)\n    while (cur.findNext()) {\n      if (CodeMirror.cmpPos(cur.to(), this.getCursor(\"to\")) > 0) break\n      ranges.push({anchor: cur.from(), head: cur.to()})\n    }\n    if (ranges.length)\n      this.setSelections(ranges, 0)\n  })\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../../lib/codemirror\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../../lib/codemirror\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  var ie_lt8 = /MSIE \\d/.test(navigator.userAgent) &&\n    (document.documentMode == null || document.documentMode < 8);\n\n  var Pos = CodeMirror.Pos;\n\n  var matching = {\"(\": \")>\", \")\": \"(<\", \"[\": \"]>\", \"]\": \"[<\", \"{\": \"}>\", \"}\": \"{<\", \"<\": \">>\", \">\": \"<<\"};\n\n  function bracketRegex(config) {\n    return config && config.bracketRegex || /[(){}[\\]]/\n  }\n\n  function findMatchingBracket(cm, where, config) {\n    var line = cm.getLineHandle(where.line), pos = where.ch - 1;\n    var afterCursor = config && config.afterCursor\n    if (afterCursor == null)\n      afterCursor = /(^| )cm-fat-cursor($| )/.test(cm.getWrapperElement().className)\n    var re = bracketRegex(config)\n\n    // A cursor is defined as between two characters, but in in vim command mode\n    // (i.e. not insert mode), the cursor is visually represented as a\n    // highlighted box on top of the 2nd character. Otherwise, we allow matches\n    // from before or after the cursor.\n    var match = (!afterCursor && pos >= 0 && re.test(line.text.charAt(pos)) && matching[line.text.charAt(pos)]) ||\n        re.test(line.text.charAt(pos + 1)) && matching[line.text.charAt(++pos)];\n    if (!match) return null;\n    var dir = match.charAt(1) == \">\" ? 1 : -1;\n    if (config && config.strict && (dir > 0) != (pos == where.ch)) return null;\n    var style = cm.getTokenTypeAt(Pos(where.line, pos + 1));\n\n    var found = scanForBracket(cm, Pos(where.line, pos + (dir > 0 ? 1 : 0)), dir, style, config);\n    if (found == null) return null;\n    return {from: Pos(where.line, pos), to: found && found.pos,\n            match: found && found.ch == match.charAt(0), forward: dir > 0};\n  }\n\n  // bracketRegex is used to specify which type of bracket to scan\n  // should be a regexp, e.g. /[[\\]]/\n  //\n  // Note: If \"where\" is on an open bracket, then this bracket is ignored.\n  //\n  // Returns false when no bracket was found, null when it reached\n  // maxScanLines and gave up\n  function scanForBracket(cm, where, dir, style, config) {\n    var maxScanLen = (config && config.maxScanLineLength) || 10000;\n    var maxScanLines = (config && config.maxScanLines) || 1000;\n\n    var stack = [];\n    var re = bracketRegex(config)\n    var lineEnd = dir > 0 ? Math.min(where.line + maxScanLines, cm.lastLine() + 1)\n                          : Math.max(cm.firstLine() - 1, where.line - maxScanLines);\n    for (var lineNo = where.line; lineNo != lineEnd; lineNo += dir) {\n      var line = cm.getLine(lineNo);\n      if (!line) continue;\n      var pos = dir > 0 ? 0 : line.length - 1, end = dir > 0 ? line.length : -1;\n      if (line.length > maxScanLen) continue;\n      if (lineNo == where.line) pos = where.ch - (dir < 0 ? 1 : 0);\n      for (; pos != end; pos += dir) {\n        var ch = line.charAt(pos);\n        if (re.test(ch) && (style === undefined ||\n                            (cm.getTokenTypeAt(Pos(lineNo, pos + 1)) || \"\") == (style || \"\"))) {\n          var match = matching[ch];\n          if (match && (match.charAt(1) == \">\") == (dir > 0)) stack.push(ch);\n          else if (!stack.length) return {pos: Pos(lineNo, pos), ch: ch};\n          else stack.pop();\n        }\n      }\n    }\n    return lineNo - dir == (dir > 0 ? cm.lastLine() : cm.firstLine()) ? false : null;\n  }\n\n  function matchBrackets(cm, autoclear, config) {\n    // Disable brace matching in long lines, since it'll cause hugely slow updates\n    var maxHighlightLen = cm.state.matchBrackets.maxHighlightLineLength || 1000,\n      highlightNonMatching = config && config.highlightNonMatching;\n    var marks = [], ranges = cm.listSelections();\n    for (var i = 0; i < ranges.length; i++) {\n      var match = ranges[i].empty() && findMatchingBracket(cm, ranges[i].head, config);\n      if (match && (match.match || highlightNonMatching !== false) && cm.getLine(match.from.line).length <= maxHighlightLen) {\n        var style = match.match ? \"CodeMirror-matchingbracket\" : \"CodeMirror-nonmatchingbracket\";\n        marks.push(cm.markText(match.from, Pos(match.from.line, match.from.ch + 1), {className: style}));\n        if (match.to && cm.getLine(match.to.line).length <= maxHighlightLen)\n          marks.push(cm.markText(match.to, Pos(match.to.line, match.to.ch + 1), {className: style}));\n      }\n    }\n\n    if (marks.length) {\n      // Kludge to work around the IE bug from issue #1193, where text\n      // input stops going to the textarea whenever this fires.\n      if (ie_lt8 && cm.state.focused) cm.focus();\n\n      var clear = function() {\n        cm.operation(function() {\n          for (var i = 0; i < marks.length; i++) marks[i].clear();\n        });\n      };\n      if (autoclear) setTimeout(clear, 800);\n      else return clear;\n    }\n  }\n\n  function doMatchBrackets(cm) {\n    cm.operation(function() {\n      if (cm.state.matchBrackets.currentlyHighlighted) {\n        cm.state.matchBrackets.currentlyHighlighted();\n        cm.state.matchBrackets.currentlyHighlighted = null;\n      }\n      cm.state.matchBrackets.currentlyHighlighted = matchBrackets(cm, false, cm.state.matchBrackets);\n    });\n  }\n\n  function clearHighlighted(cm) {\n    if (cm.state.matchBrackets && cm.state.matchBrackets.currentlyHighlighted) {\n      cm.state.matchBrackets.currentlyHighlighted();\n      cm.state.matchBrackets.currentlyHighlighted = null;\n    }\n  }\n\n  CodeMirror.defineOption(\"matchBrackets\", false, function(cm, val, old) {\n    if (old && old != CodeMirror.Init) {\n      cm.off(\"cursorActivity\", doMatchBrackets);\n      cm.off(\"focus\", doMatchBrackets)\n      cm.off(\"blur\", clearHighlighted)\n      clearHighlighted(cm);\n    }\n    if (val) {\n      cm.state.matchBrackets = typeof val == \"object\" ? val : {};\n      cm.on(\"cursorActivity\", doMatchBrackets);\n      cm.on(\"focus\", doMatchBrackets)\n      cm.on(\"blur\", clearHighlighted)\n    }\n  });\n\n  CodeMirror.defineExtension(\"matchBrackets\", function() {matchBrackets(this, true);});\n  CodeMirror.defineExtension(\"findMatchingBracket\", function(pos, config, oldConfig){\n    // Backwards-compatibility kludge\n    if (oldConfig || typeof config == \"boolean\") {\n      if (!oldConfig) {\n        config = config ? {strict: true} : null\n      } else {\n        oldConfig.strict = config\n        config = oldConfig\n      }\n    }\n    return findMatchingBracket(this, pos, config)\n  });\n  CodeMirror.defineExtension(\"scanForBracket\", function(pos, dir, style, config){\n    return scanForBracket(this, pos, dir, style, config);\n  });\n});\n","// CodeMirror, copyright (c) by Marijn Haverbeke and others\n// Distributed under an MIT license: https://codemirror.net/LICENSE\n\n// A rough approximation of Sublime Text's keybindings\n// Depends on addon/search/searchcursor.js and optionally addon/dialog/dialogs.js\n\n(function(mod) {\n  if (typeof exports == \"object\" && typeof module == \"object\") // CommonJS\n    mod(require(\"../lib/codemirror\"), require(\"../addon/search/searchcursor\"), require(\"../addon/edit/matchbrackets\"));\n  else if (typeof define == \"function\" && define.amd) // AMD\n    define([\"../lib/codemirror\", \"../addon/search/searchcursor\", \"../addon/edit/matchbrackets\"], mod);\n  else // Plain browser env\n    mod(CodeMirror);\n})(function(CodeMirror) {\n  \"use strict\";\n\n  var cmds = CodeMirror.commands;\n  var Pos = CodeMirror.Pos;\n\n  // This is not exactly Sublime's algorithm. I couldn't make heads or tails of that.\n  function findPosSubword(doc, start, dir) {\n    if (dir < 0 && start.ch == 0) return doc.clipPos(Pos(start.line - 1));\n    var line = doc.getLine(start.line);\n    if (dir > 0 && start.ch >= line.length) return doc.clipPos(Pos(start.line + 1, 0));\n    var state = \"start\", type, startPos = start.ch;\n    for (var pos = startPos, e = dir < 0 ? 0 : line.length, i = 0; pos != e; pos += dir, i++) {\n      var next = line.charAt(dir < 0 ? pos - 1 : pos);\n      var cat = next != \"_\" && CodeMirror.isWordChar(next) ? \"w\" : \"o\";\n      if (cat == \"w\" && next.toUpperCase() == next) cat = \"W\";\n      if (state == \"start\") {\n        if (cat != \"o\") { state = \"in\"; type = cat; }\n        else startPos = pos + dir\n      } else if (state == \"in\") {\n        if (type != cat) {\n          if (type == \"w\" && cat == \"W\" && dir < 0) pos--;\n          if (type == \"W\" && cat == \"w\" && dir > 0) { // From uppercase to lowercase\n            if (pos == startPos + 1) { type = \"w\"; continue; }\n            else pos--;\n          }\n          break;\n        }\n      }\n    }\n    return Pos(start.line, pos);\n  }\n\n  function moveSubword(cm, dir) {\n    cm.extendSelectionsBy(function(range) {\n      if (cm.display.shift || cm.doc.extend || range.empty())\n        return findPosSubword(cm.doc, range.head, dir);\n      else\n        return dir < 0 ? range.from() : range.to();\n    });\n  }\n\n  cmds.goSubwordLeft = function(cm) { moveSubword(cm, -1); };\n  cmds.goSubwordRight = function(cm) { moveSubword(cm, 1); };\n\n  cmds.scrollLineUp = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleBottomLine = cm.lineAtHeight(info.top + info.clientHeight, \"local\");\n      if (cm.getCursor().line >= visibleBottomLine)\n        cm.execCommand(\"goLineUp\");\n    }\n    cm.scrollTo(null, info.top - cm.defaultTextHeight());\n  };\n  cmds.scrollLineDown = function(cm) {\n    var info = cm.getScrollInfo();\n    if (!cm.somethingSelected()) {\n      var visibleTopLine = cm.lineAtHeight(info.top, \"local\")+1;\n      if (cm.getCursor().line <= visibleTopLine)\n        cm.execCommand(\"goLineDown\");\n    }\n    cm.scrollTo(null, info.top + cm.defaultTextHeight());\n  };\n\n  cmds.splitSelectionByLine = function(cm) {\n    var ranges = cm.listSelections(), lineRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      for (var line = from.line; line <= to.line; ++line)\n        if (!(to.line > from.line && line == to.line && to.ch == 0))\n          lineRanges.push({anchor: line == from.line ? from : Pos(line, 0),\n                           head: line == to.line ? to : Pos(line)});\n    }\n    cm.setSelections(lineRanges, 0);\n  };\n\n  cmds.singleSelectionTop = function(cm) {\n    var range = cm.listSelections()[0];\n    cm.setSelection(range.anchor, range.head, {scroll: false});\n  };\n\n  cmds.selectLine = function(cm) {\n    var ranges = cm.listSelections(), extended = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      extended.push({anchor: Pos(range.from().line, 0),\n                     head: Pos(range.to().line + 1, 0)});\n    }\n    cm.setSelections(extended);\n  };\n\n  function insertLine(cm, above) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    cm.operation(function() {\n      var len = cm.listSelections().length, newSelection = [], last = -1;\n      for (var i = 0; i < len; i++) {\n        var head = cm.listSelections()[i].head;\n        if (head.line <= last) continue;\n        var at = Pos(head.line + (above ? 0 : 1), 0);\n        cm.replaceRange(\"\\n\", at, null, \"+insertLine\");\n        cm.indentLine(at.line, null, true);\n        newSelection.push({head: at, anchor: at});\n        last = head.line + 1;\n      }\n      cm.setSelections(newSelection);\n    });\n    cm.execCommand(\"indentAuto\");\n  }\n\n  cmds.insertLineAfter = function(cm) { return insertLine(cm, false); };\n\n  cmds.insertLineBefore = function(cm) { return insertLine(cm, true); };\n\n  function wordAt(cm, pos) {\n    var start = pos.ch, end = start, line = cm.getLine(pos.line);\n    while (start && CodeMirror.isWordChar(line.charAt(start - 1))) --start;\n    while (end < line.length && CodeMirror.isWordChar(line.charAt(end))) ++end;\n    return {from: Pos(pos.line, start), to: Pos(pos.line, end), word: line.slice(start, end)};\n  }\n\n  cmds.selectNextOccurrence = function(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    var fullWord = cm.state.sublimeFindFullWord == cm.doc.sel;\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      cm.setSelection(word.from, word.to);\n      fullWord = true;\n    } else {\n      var text = cm.getRange(from, to);\n      var query = fullWord ? new RegExp(\"\\\\b\" + text + \"\\\\b\") : text;\n      var cur = cm.getSearchCursor(query, to);\n      var found = cur.findNext();\n      if (!found) {\n        cur = cm.getSearchCursor(query, Pos(cm.firstLine(), 0));\n        found = cur.findNext();\n      }\n      if (!found || isSelectedRange(cm.listSelections(), cur.from(), cur.to())) return\n      cm.addSelection(cur.from(), cur.to());\n    }\n    if (fullWord)\n      cm.state.sublimeFindFullWord = cm.doc.sel;\n  };\n\n  cmds.skipAndSelectNextOccurrence = function(cm) {\n    var prevAnchor = cm.getCursor(\"anchor\"), prevHead = cm.getCursor(\"head\");\n    cmds.selectNextOccurrence(cm);\n    if (CodeMirror.cmpPos(prevAnchor, prevHead) != 0) {\n      cm.doc.setSelections(cm.doc.listSelections()\n          .filter(function (sel) {\n            return sel.anchor != prevAnchor || sel.head != prevHead;\n          }));\n    }\n  }\n\n  function addCursorToSelection(cm, dir) {\n    var ranges = cm.listSelections(), newRanges = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      var newAnchor = cm.findPosV(\n          range.anchor, dir, \"line\", range.anchor.goalColumn);\n      var newHead = cm.findPosV(\n          range.head, dir, \"line\", range.head.goalColumn);\n      newAnchor.goalColumn = range.anchor.goalColumn != null ?\n          range.anchor.goalColumn : cm.cursorCoords(range.anchor, \"div\").left;\n      newHead.goalColumn = range.head.goalColumn != null ?\n          range.head.goalColumn : cm.cursorCoords(range.head, \"div\").left;\n      var newRange = {anchor: newAnchor, head: newHead};\n      newRanges.push(range);\n      newRanges.push(newRange);\n    }\n    cm.setSelections(newRanges);\n  }\n  cmds.addCursorToPrevLine = function(cm) { addCursorToSelection(cm, -1); };\n  cmds.addCursorToNextLine = function(cm) { addCursorToSelection(cm, 1); };\n\n  function isSelectedRange(ranges, from, to) {\n    for (var i = 0; i < ranges.length; i++)\n      if (CodeMirror.cmpPos(ranges[i].from(), from) == 0 &&\n          CodeMirror.cmpPos(ranges[i].to(), to) == 0) return true\n    return false\n  }\n\n  var mirror = \"(){}[]\";\n  function selectBetweenBrackets(cm) {\n    var ranges = cm.listSelections(), newRanges = []\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], pos = range.head, opening = cm.scanForBracket(pos, -1);\n      if (!opening) return false;\n      for (;;) {\n        var closing = cm.scanForBracket(pos, 1);\n        if (!closing) return false;\n        if (closing.ch == mirror.charAt(mirror.indexOf(opening.ch) + 1)) {\n          var startPos = Pos(opening.pos.line, opening.pos.ch + 1);\n          if (CodeMirror.cmpPos(startPos, range.from()) == 0 &&\n              CodeMirror.cmpPos(closing.pos, range.to()) == 0) {\n            opening = cm.scanForBracket(opening.pos, -1);\n            if (!opening) return false;\n          } else {\n            newRanges.push({anchor: startPos, head: closing.pos});\n            break;\n          }\n        }\n        pos = Pos(closing.pos.line, closing.pos.ch + 1);\n      }\n    }\n    cm.setSelections(newRanges);\n    return true;\n  }\n\n  cmds.selectScope = function(cm) {\n    selectBetweenBrackets(cm) || cm.execCommand(\"selectAll\");\n  };\n  cmds.selectBetweenBrackets = function(cm) {\n    if (!selectBetweenBrackets(cm)) return CodeMirror.Pass;\n  };\n\n  function puncType(type) {\n    return !type ? null : /\\bpunctuation\\b/.test(type) ? type : undefined\n  }\n\n  cmds.goToBracket = function(cm) {\n    cm.extendSelectionsBy(function(range) {\n      var next = cm.scanForBracket(range.head, 1, puncType(cm.getTokenTypeAt(range.head)));\n      if (next && CodeMirror.cmpPos(next.pos, range.head) != 0) return next.pos;\n      var prev = cm.scanForBracket(range.head, -1, puncType(cm.getTokenTypeAt(Pos(range.head.line, range.head.ch + 1))));\n      return prev && Pos(prev.pos.line, prev.pos.ch + 1) || range.head;\n    });\n  };\n\n  cmds.swapLineUp = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.firstLine() - 1, newSels = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from().line - 1, to = range.to().line;\n      newSels.push({anchor: Pos(range.anchor.line - 1, range.anchor.ch),\n                    head: Pos(range.head.line - 1, range.head.ch)});\n      if (range.to().ch == 0 && !range.empty()) --to;\n      if (from > at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = 0; i < linesToMove.length; i += 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        if (to > cm.lastLine())\n          cm.replaceRange(\"\\n\" + line, Pos(cm.lastLine()), null, \"+swapLine\");\n        else\n          cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.setSelections(newSels);\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.swapLineDown = function(cm) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), linesToMove = [], at = cm.lastLine() + 1;\n    for (var i = ranges.length - 1; i >= 0; i--) {\n      var range = ranges[i], from = range.to().line + 1, to = range.from().line;\n      if (range.to().ch == 0 && !range.empty()) from--;\n      if (from < at) linesToMove.push(from, to);\n      else if (linesToMove.length) linesToMove[linesToMove.length - 1] = to;\n      at = to;\n    }\n    cm.operation(function() {\n      for (var i = linesToMove.length - 2; i >= 0; i -= 2) {\n        var from = linesToMove[i], to = linesToMove[i + 1];\n        var line = cm.getLine(from);\n        if (from == cm.lastLine())\n          cm.replaceRange(\"\", Pos(from - 1), Pos(from), \"+swapLine\");\n        else\n          cm.replaceRange(\"\", Pos(from, 0), Pos(from + 1, 0), \"+swapLine\");\n        cm.replaceRange(line + \"\\n\", Pos(to, 0), null, \"+swapLine\");\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.toggleCommentIndented = function(cm) {\n    cm.toggleComment({ indent: true });\n  }\n\n  cmds.joinLines = function(cm) {\n    var ranges = cm.listSelections(), joined = [];\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i], from = range.from();\n      var start = from.line, end = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == end)\n        end = ranges[++i].to().line;\n      joined.push({start: start, end: end, anchor: !range.empty() && from});\n    }\n    cm.operation(function() {\n      var offset = 0, ranges = [];\n      for (var i = 0; i < joined.length; i++) {\n        var obj = joined[i];\n        var anchor = obj.anchor && Pos(obj.anchor.line - offset, obj.anchor.ch), head;\n        for (var line = obj.start; line <= obj.end; line++) {\n          var actual = line - offset;\n          if (line == obj.end) head = Pos(actual, cm.getLine(actual).length + 1);\n          if (actual < cm.lastLine()) {\n            cm.replaceRange(\" \", Pos(actual), Pos(actual + 1, /^\\s*/.exec(cm.getLine(actual + 1))[0].length));\n            ++offset;\n          }\n        }\n        ranges.push({anchor: anchor || head, head: head});\n      }\n      cm.setSelections(ranges, 0);\n    });\n  };\n\n  cmds.duplicateLine = function(cm) {\n    cm.operation(function() {\n      var rangeCount = cm.listSelections().length;\n      for (var i = 0; i < rangeCount; i++) {\n        var range = cm.listSelections()[i];\n        if (range.empty())\n          cm.replaceRange(cm.getLine(range.head.line) + \"\\n\", Pos(range.head.line, 0));\n        else\n          cm.replaceRange(cm.getRange(range.from(), range.to()), range.from());\n      }\n      cm.scrollIntoView();\n    });\n  };\n\n\n  function sortLines(cm, caseSensitive, direction) {\n    if (cm.isReadOnly()) return CodeMirror.Pass\n    var ranges = cm.listSelections(), toSort = [], selected;\n    for (var i = 0; i < ranges.length; i++) {\n      var range = ranges[i];\n      if (range.empty()) continue;\n      var from = range.from().line, to = range.to().line;\n      while (i < ranges.length - 1 && ranges[i + 1].from().line == to)\n        to = ranges[++i].to().line;\n      if (!ranges[i].to().ch) to--;\n      toSort.push(from, to);\n    }\n    if (toSort.length) selected = true;\n    else toSort.push(cm.firstLine(), cm.lastLine());\n\n    cm.operation(function() {\n      var ranges = [];\n      for (var i = 0; i < toSort.length; i += 2) {\n        var from = toSort[i], to = toSort[i + 1];\n        var start = Pos(from, 0), end = Pos(to);\n        var lines = cm.getRange(start, end, false);\n        if (caseSensitive)\n          lines.sort(function(a, b) { return a < b ? -direction : a == b ? 0 : direction; });\n        else\n          lines.sort(function(a, b) {\n            var au = a.toUpperCase(), bu = b.toUpperCase();\n            if (au != bu) { a = au; b = bu; }\n            return a < b ? -direction : a == b ? 0 : direction;\n          });\n        cm.replaceRange(lines, start, end);\n        if (selected) ranges.push({anchor: start, head: Pos(to + 1, 0)});\n      }\n      if (selected) cm.setSelections(ranges, 0);\n    });\n  }\n\n  cmds.sortLines = function(cm) { sortLines(cm, true, 1); };\n  cmds.reverseSortLines = function(cm) { sortLines(cm, true, -1); };\n  cmds.sortLinesInsensitive = function(cm) { sortLines(cm, false, 1); };\n  cmds.reverseSortLinesInsensitive = function(cm) { sortLines(cm, false, -1); };\n\n  cmds.nextBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      var current = marks.shift();\n      var found = current.find();\n      if (found) {\n        marks.push(current);\n        return cm.setSelection(found.from, found.to);\n      }\n    }\n  };\n\n  cmds.prevBookmark = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) while (marks.length) {\n      marks.unshift(marks.pop());\n      var found = marks[marks.length - 1].find();\n      if (!found)\n        marks.pop();\n      else\n        return cm.setSelection(found.from, found.to);\n    }\n  };\n\n  cmds.toggleBookmark = function(cm) {\n    var ranges = cm.listSelections();\n    var marks = cm.state.sublimeBookmarks || (cm.state.sublimeBookmarks = []);\n    for (var i = 0; i < ranges.length; i++) {\n      var from = ranges[i].from(), to = ranges[i].to();\n      var found = ranges[i].empty() ? cm.findMarksAt(from) : cm.findMarks(from, to);\n      for (var j = 0; j < found.length; j++) {\n        if (found[j].sublimeBookmark) {\n          found[j].clear();\n          for (var k = 0; k < marks.length; k++)\n            if (marks[k] == found[j])\n              marks.splice(k--, 1);\n          break;\n        }\n      }\n      if (j == found.length)\n        marks.push(cm.markText(from, to, {sublimeBookmark: true, clearWhenEmpty: false}));\n    }\n  };\n\n  cmds.clearBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks;\n    if (marks) for (var i = 0; i < marks.length; i++) marks[i].clear();\n    marks.length = 0;\n  };\n\n  cmds.selectBookmarks = function(cm) {\n    var marks = cm.state.sublimeBookmarks, ranges = [];\n    if (marks) for (var i = 0; i < marks.length; i++) {\n      var found = marks[i].find();\n      if (!found)\n        marks.splice(i--, 0);\n      else\n        ranges.push({anchor: found.from, head: found.to});\n    }\n    if (ranges.length)\n      cm.setSelections(ranges, 0);\n  };\n\n  function modifyWordOrSelection(cm, mod) {\n    cm.operation(function() {\n      var ranges = cm.listSelections(), indices = [], replacements = [];\n      for (var i = 0; i < ranges.length; i++) {\n        var range = ranges[i];\n        if (range.empty()) { indices.push(i); replacements.push(\"\"); }\n        else replacements.push(mod(cm.getRange(range.from(), range.to())));\n      }\n      cm.replaceSelections(replacements, \"around\", \"case\");\n      for (var i = indices.length - 1, at; i >= 0; i--) {\n        var range = ranges[indices[i]];\n        if (at && CodeMirror.cmpPos(range.head, at) > 0) continue;\n        var word = wordAt(cm, range.head);\n        at = word.from;\n        cm.replaceRange(mod(word.word), word.from, word.to);\n      }\n    });\n  }\n\n  cmds.smartBackspace = function(cm) {\n    if (cm.somethingSelected()) return CodeMirror.Pass;\n\n    cm.operation(function() {\n      var cursors = cm.listSelections();\n      var indentUnit = cm.getOption(\"indentUnit\");\n\n      for (var i = cursors.length - 1; i >= 0; i--) {\n        var cursor = cursors[i].head;\n        var toStartOfLine = cm.getRange({line: cursor.line, ch: 0}, cursor);\n        var column = CodeMirror.countColumn(toStartOfLine, null, cm.getOption(\"tabSize\"));\n\n        // Delete by one character by default\n        var deletePos = cm.findPosH(cursor, -1, \"char\", false);\n\n        if (toStartOfLine && !/\\S/.test(toStartOfLine) && column % indentUnit == 0) {\n          var prevIndent = new Pos(cursor.line,\n            CodeMirror.findColumn(toStartOfLine, column - indentUnit, indentUnit));\n\n          // Smart delete only if we found a valid prevIndent location\n          if (prevIndent.ch != cursor.ch) deletePos = prevIndent;\n        }\n\n        cm.replaceRange(\"\", deletePos, cursor, \"+delete\");\n      }\n    });\n  };\n\n  cmds.delLineRight = function(cm) {\n    cm.operation(function() {\n      var ranges = cm.listSelections();\n      for (var i = ranges.length - 1; i >= 0; i--)\n        cm.replaceRange(\"\", ranges[i].anchor, Pos(ranges[i].to().line), \"+delete\");\n      cm.scrollIntoView();\n    });\n  };\n\n  cmds.upcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toUpperCase(); });\n  };\n  cmds.downcaseAtCursor = function(cm) {\n    modifyWordOrSelection(cm, function(str) { return str.toLowerCase(); });\n  };\n\n  cmds.setSublimeMark = function(cm) {\n    if (cm.state.sublimeMark) cm.state.sublimeMark.clear();\n    cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n  };\n  cmds.selectToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) cm.setSelection(cm.getCursor(), found);\n  };\n  cmds.deleteToSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      var from = cm.getCursor(), to = found;\n      if (CodeMirror.cmpPos(from, to) > 0) { var tmp = to; to = from; from = tmp; }\n      cm.state.sublimeKilled = cm.getRange(from, to);\n      cm.replaceRange(\"\", from, to);\n    }\n  };\n  cmds.swapWithSublimeMark = function(cm) {\n    var found = cm.state.sublimeMark && cm.state.sublimeMark.find();\n    if (found) {\n      cm.state.sublimeMark.clear();\n      cm.state.sublimeMark = cm.setBookmark(cm.getCursor());\n      cm.setCursor(found);\n    }\n  };\n  cmds.sublimeYank = function(cm) {\n    if (cm.state.sublimeKilled != null)\n      cm.replaceSelection(cm.state.sublimeKilled, null, \"paste\");\n  };\n\n  cmds.showInCenter = function(cm) {\n    var pos = cm.cursorCoords(null, \"local\");\n    cm.scrollTo(null, (pos.top + pos.bottom) / 2 - cm.getScrollInfo().clientHeight / 2);\n  };\n\n  function getTarget(cm) {\n    var from = cm.getCursor(\"from\"), to = cm.getCursor(\"to\");\n    if (CodeMirror.cmpPos(from, to) == 0) {\n      var word = wordAt(cm, from);\n      if (!word.word) return;\n      from = word.from;\n      to = word.to;\n    }\n    return {from: from, to: to, query: cm.getRange(from, to), word: word};\n  }\n\n  function findAndGoTo(cm, forward) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var query = target.query;\n    var cur = cm.getSearchCursor(query, forward ? target.to : target.from);\n\n    if (forward ? cur.findNext() : cur.findPrevious()) {\n      cm.setSelection(cur.from(), cur.to());\n    } else {\n      cur = cm.getSearchCursor(query, forward ? Pos(cm.firstLine(), 0)\n                                              : cm.clipPos(Pos(cm.lastLine())));\n      if (forward ? cur.findNext() : cur.findPrevious())\n        cm.setSelection(cur.from(), cur.to());\n      else if (target.word)\n        cm.setSelection(target.from, target.to);\n    }\n  };\n  cmds.findUnder = function(cm) { findAndGoTo(cm, true); };\n  cmds.findUnderPrevious = function(cm) { findAndGoTo(cm,false); };\n  cmds.findAllUnder = function(cm) {\n    var target = getTarget(cm);\n    if (!target) return;\n    var cur = cm.getSearchCursor(target.query);\n    var matches = [];\n    var primaryIndex = -1;\n    while (cur.findNext()) {\n      matches.push({anchor: cur.from(), head: cur.to()});\n      if (cur.from().line <= target.from.line && cur.from().ch <= target.from.ch)\n        primaryIndex++;\n    }\n    cm.setSelections(matches, primaryIndex);\n  };\n\n\n  var keyMap = CodeMirror.keyMap;\n  keyMap.macSublime = {\n    \"Cmd-Left\": \"goLineStartSmart\",\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-Left\": \"goSubwordLeft\",\n    \"Ctrl-Right\": \"goSubwordRight\",\n    \"Ctrl-Alt-Up\": \"scrollLineUp\",\n    \"Ctrl-Alt-Down\": \"scrollLineDown\",\n    \"Cmd-L\": \"selectLine\",\n    \"Shift-Cmd-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Cmd-Enter\": \"insertLineAfter\",\n    \"Shift-Cmd-Enter\": \"insertLineBefore\",\n    \"Cmd-D\": \"selectNextOccurrence\",\n    \"Shift-Cmd-Space\": \"selectScope\",\n    \"Shift-Cmd-M\": \"selectBetweenBrackets\",\n    \"Cmd-M\": \"goToBracket\",\n    \"Cmd-Ctrl-Up\": \"swapLineUp\",\n    \"Cmd-Ctrl-Down\": \"swapLineDown\",\n    \"Cmd-/\": \"toggleCommentIndented\",\n    \"Cmd-J\": \"joinLines\",\n    \"Shift-Cmd-D\": \"duplicateLine\",\n    \"F5\": \"sortLines\",\n    \"Shift-F5\": \"reverseSortLines\",\n    \"Cmd-F5\": \"sortLinesInsensitive\",\n    \"Shift-Cmd-F5\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Cmd-F2\": \"toggleBookmark\",\n    \"Shift-Cmd-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Cmd-K Cmd-D\": \"skipAndSelectNextOccurrence\",\n    \"Cmd-K Cmd-K\": \"delLineRight\",\n    \"Cmd-K Cmd-U\": \"upcaseAtCursor\",\n    \"Cmd-K Cmd-L\": \"downcaseAtCursor\",\n    \"Cmd-K Cmd-Space\": \"setSublimeMark\",\n    \"Cmd-K Cmd-A\": \"selectToSublimeMark\",\n    \"Cmd-K Cmd-W\": \"deleteToSublimeMark\",\n    \"Cmd-K Cmd-X\": \"swapWithSublimeMark\",\n    \"Cmd-K Cmd-Y\": \"sublimeYank\",\n    \"Cmd-K Cmd-C\": \"showInCenter\",\n    \"Cmd-K Cmd-G\": \"clearBookmarks\",\n    \"Cmd-K Cmd-Backspace\": \"delLineLeft\",\n    \"Cmd-K Cmd-1\": \"foldAll\",\n    \"Cmd-K Cmd-0\": \"unfoldAll\",\n    \"Cmd-K Cmd-J\": \"unfoldAll\",\n    \"Ctrl-Shift-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Shift-Down\": \"addCursorToNextLine\",\n    \"Cmd-F3\": \"findUnder\",\n    \"Shift-Cmd-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Cmd-[\": \"fold\",\n    \"Shift-Cmd-]\": \"unfold\",\n    \"Cmd-I\": \"findIncremental\",\n    \"Shift-Cmd-I\": \"findIncrementalReverse\",\n    \"Cmd-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"macDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.macSublime);\n\n  keyMap.pcSublime = {\n    \"Shift-Tab\": \"indentLess\",\n    \"Shift-Ctrl-K\": \"deleteLine\",\n    \"Alt-Q\": \"wrapLines\",\n    \"Ctrl-T\": \"transposeChars\",\n    \"Alt-Left\": \"goSubwordLeft\",\n    \"Alt-Right\": \"goSubwordRight\",\n    \"Ctrl-Up\": \"scrollLineUp\",\n    \"Ctrl-Down\": \"scrollLineDown\",\n    \"Ctrl-L\": \"selectLine\",\n    \"Shift-Ctrl-L\": \"splitSelectionByLine\",\n    \"Esc\": \"singleSelectionTop\",\n    \"Ctrl-Enter\": \"insertLineAfter\",\n    \"Shift-Ctrl-Enter\": \"insertLineBefore\",\n    \"Ctrl-D\": \"selectNextOccurrence\",\n    \"Shift-Ctrl-Space\": \"selectScope\",\n    \"Shift-Ctrl-M\": \"selectBetweenBrackets\",\n    \"Ctrl-M\": \"goToBracket\",\n    \"Shift-Ctrl-Up\": \"swapLineUp\",\n    \"Shift-Ctrl-Down\": \"swapLineDown\",\n    \"Ctrl-/\": \"toggleCommentIndented\",\n    \"Ctrl-J\": \"joinLines\",\n    \"Shift-Ctrl-D\": \"duplicateLine\",\n    \"F9\": \"sortLines\",\n    \"Shift-F9\": \"reverseSortLines\",\n    \"Ctrl-F9\": \"sortLinesInsensitive\",\n    \"Shift-Ctrl-F9\": \"reverseSortLinesInsensitive\",\n    \"F2\": \"nextBookmark\",\n    \"Shift-F2\": \"prevBookmark\",\n    \"Ctrl-F2\": \"toggleBookmark\",\n    \"Shift-Ctrl-F2\": \"clearBookmarks\",\n    \"Alt-F2\": \"selectBookmarks\",\n    \"Backspace\": \"smartBackspace\",\n    \"Ctrl-K Ctrl-D\": \"skipAndSelectNextOccurrence\",\n    \"Ctrl-K Ctrl-K\": \"delLineRight\",\n    \"Ctrl-K Ctrl-U\": \"upcaseAtCursor\",\n    \"Ctrl-K Ctrl-L\": \"downcaseAtCursor\",\n    \"Ctrl-K Ctrl-Space\": \"setSublimeMark\",\n    \"Ctrl-K Ctrl-A\": \"selectToSublimeMark\",\n    \"Ctrl-K Ctrl-W\": \"deleteToSublimeMark\",\n    \"Ctrl-K Ctrl-X\": \"swapWithSublimeMark\",\n    \"Ctrl-K Ctrl-Y\": \"sublimeYank\",\n    \"Ctrl-K Ctrl-C\": \"showInCenter\",\n    \"Ctrl-K Ctrl-G\": \"clearBookmarks\",\n    \"Ctrl-K Ctrl-Backspace\": \"delLineLeft\",\n    \"Ctrl-K Ctrl-1\": \"foldAll\",\n    \"Ctrl-K Ctrl-0\": \"unfoldAll\",\n    \"Ctrl-K Ctrl-J\": \"unfoldAll\",\n    \"Ctrl-Alt-Up\": \"addCursorToPrevLine\",\n    \"Ctrl-Alt-Down\": \"addCursorToNextLine\",\n    \"Ctrl-F3\": \"findUnder\",\n    \"Shift-Ctrl-F3\": \"findUnderPrevious\",\n    \"Alt-F3\": \"findAllUnder\",\n    \"Shift-Ctrl-[\": \"fold\",\n    \"Shift-Ctrl-]\": \"unfold\",\n    \"Ctrl-I\": \"findIncremental\",\n    \"Shift-Ctrl-I\": \"findIncrementalReverse\",\n    \"Ctrl-H\": \"replace\",\n    \"F3\": \"findNext\",\n    \"Shift-F3\": \"findPrev\",\n    \"fallthrough\": \"pcDefault\"\n  };\n  CodeMirror.normalizeKeyMap(keyMap.pcSublime);\n\n  var mac = keyMap.default == keyMap.macDefault;\n  keyMap.sublime = mac ? keyMap.macSublime : keyMap.pcSublime;\n});\n"],"names":["CodeMirror","doFold","noFold","Pos","regexp","flags","ignoreCase","global","multiline","current","regexpFlags","target","i","length","indexOf","charAt","RegExp","source","test","doc","start","ensureFlags","line","ch","last","lastLine","lastIndex","string","getLine","match","exec","from","index","to","maybeMultiline","searchRegexpForward","chunk","curLine","before","slice","split","inside","startLine","startCh","endMargin","newMatch","end","first","firstLine","lastMatchIn","searchRegexpBackward","chunkSize","orig","folded","pos","foldFunc","min","max","Math","mid","len","query","caseFold","fold","lines","found","adjustPos","cutFrom","endString","lastIndexOf","top","topString","options","atOccurrence","clipPos","matches","reverse","pos2","searchStringBackward","searchStringForward","searchRegexpBackwardMultiline","searchRegexpForwardMultiline","String","prototype","normalize","str","toLowerCase","findNext","this","find","findPrevious","result","cmpPos","replace","newText","origin","splitLines","replaceRange","defineExtension","SearchCursor","defineDocExtension","ranges","cur","getSearchCursor","getCursor","push","anchor","head","setSelections","require$$0","ie_lt8","navigator","userAgent","documentMode","document","matching","(",")","[","]","{","}","<",">","config","bracketRegex","cm","where","getLineHandle","afterCursor","getWrapperElement","className","re","text","dir","strict","style","getTokenTypeAt","scanForBracket","forward","maxScanLen","maxScanLineLength","maxScanLines","stack","lineEnd","lineNo","pop","autoclear","maxHighlightLen","state","matchBrackets","maxHighlightLineLength","highlightNonMatching","marks","listSelections","empty","findMatchingBracket","markText","focused","focus","clear","operation","i2","currentlyHighlighted","defineOption","val","old","Init","off","doMatchBrackets","clearHighlighted","on","oldConfig","cmds","commands","type","startPos","e","next","cat","isWordChar","toUpperCase","extendSelectionsBy","range","display","shift","extend","findPosSubword","above","isReadOnly","Pass","newSelection","at","indentLine","execCommand","word","newRanges","newAnchor","findPosV","goalColumn","newHead","cursorCoords","left","newRange","goSubwordLeft","goSubwordRight","scrollLineUp","info","getScrollInfo","somethingSelected","visibleBottomLine","lineAtHeight","clientHeight","scrollTo","defaultTextHeight","scrollLineDown","visibleTopLine","splitSelectionByLine","lineRanges","singleSelectionTop","setSelection","scroll","selectLine","extended","insertLineAfter","insertLine","insertLineBefore","selectNextOccurrence","fullWord","sublimeFindFullWord","sel","wordAt","getRange","isSelectedRange","addSelection","skipAndSelectNextOccurrence","prevAnchor","prevHead","filter","addCursorToPrevLine","addCursorToNextLine","mirror","opening","closing","caseSensitive","direction","selected","toSort","ranges2","from2","to2","sort","a","b","au","bu","mod","indices","replacements","replaceSelections","getTarget","selectScope","selectBetweenBrackets","goToBracket","puncType","prev","swapLineUp","linesToMove","newSels","scrollIntoView","swapLineDown","toggleCommentIndented","toggleComment","indent","joinLines","joined","offset","obj","actual","duplicateLine","rangeCount","sortLines","reverseSortLines","sortLinesInsensitive","reverseSortLinesInsensitive","nextBookmark","sublimeBookmarks","prevBookmark","unshift","toggleBookmark","findMarksAt","findMarks","j","sublimeBookmark","k","splice","clearWhenEmpty","clearBookmarks","selectBookmarks","smartBackspace","cursors","indentUnit","getOption","cursor","toStartOfLine","column","countColumn","deletePos","findPosH","prevIndent","findColumn","delLineRight","upcaseAtCursor","downcaseAtCursor","setSublimeMark","sublimeMark","setBookmark","selectToSublimeMark","deleteToSublimeMark","tmp","sublimeKilled","swapWithSublimeMark","setCursor","sublimeYank","replaceSelection","showInCenter","bottom","findUnder","findUnderPrevious","findAllUnder","primaryIndex","keyMap","macSublime","Cmd-Left","Shift-Tab","Shift-Ctrl-K","Alt-Q","Ctrl-Left","Ctrl-Right","Ctrl-Alt-Up","Ctrl-Alt-Down","Cmd-L","Shift-Cmd-L","Esc","Cmd-Enter","Shift-Cmd-Enter","Cmd-D","Shift-Cmd-Space","Shift-Cmd-M","Cmd-M","Cmd-Ctrl-Up","Cmd-Ctrl-Down","Cmd-/","Cmd-J","Shift-Cmd-D","F5","Shift-F5","Cmd-F5","Shift-Cmd-F5","F2","Shift-F2","Cmd-F2","Shift-Cmd-F2","Alt-F2","Backspace","Cmd-K Cmd-D","Cmd-K Cmd-K","Cmd-K Cmd-U","Cmd-K Cmd-L","Cmd-K Cmd-Space","Cmd-K Cmd-A","Cmd-K Cmd-W","Cmd-K Cmd-X","Cmd-K Cmd-Y","Cmd-K Cmd-C","Cmd-K Cmd-G","Cmd-K Cmd-Backspace","Cmd-K Cmd-1","Cmd-K Cmd-0","Cmd-K Cmd-J","Ctrl-Shift-Up","Ctrl-Shift-Down","Cmd-F3","Shift-Cmd-F3","Alt-F3","Shift-Cmd-[","Shift-Cmd-]","Cmd-I","Shift-Cmd-I","Cmd-H","F3","Shift-F3","fallthrough","normalizeKeyMap","pcSublime","Ctrl-T","Alt-Left","Alt-Right","Ctrl-Up","Ctrl-Down","Ctrl-L","Shift-Ctrl-L","Ctrl-Enter","Shift-Ctrl-Enter","Ctrl-D","Shift-Ctrl-Space","Shift-Ctrl-M","Ctrl-M","Shift-Ctrl-Up","Shift-Ctrl-Down","Ctrl-/","Ctrl-J","Shift-Ctrl-D","F9","Shift-F9","Ctrl-F9","Shift-Ctrl-F9","Ctrl-F2","Shift-Ctrl-F2","Ctrl-K Ctrl-D","Ctrl-K Ctrl-K","Ctrl-K Ctrl-U","Ctrl-K Ctrl-L","Ctrl-K Ctrl-Space","Ctrl-K Ctrl-A","Ctrl-K Ctrl-W","Ctrl-K Ctrl-X","Ctrl-K Ctrl-Y","Ctrl-K Ctrl-C","Ctrl-K Ctrl-G","Ctrl-K Ctrl-Backspace","Ctrl-K Ctrl-1","Ctrl-K Ctrl-0","Ctrl-K Ctrl-J","Ctrl-F3","Shift-Ctrl-F3","Shift-Ctrl-[","Shift-Ctrl-]","Ctrl-I","Shift-Ctrl-I","Ctrl-H","mac","default","macDefault","sublime"],"mappings":"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"}